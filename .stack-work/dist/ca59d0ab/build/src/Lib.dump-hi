
==================== FINAL INTERFACE ====================
2017-03-22 10:03:39.7843434 UTC

interface raytrace-0.1.0.0-LqVbAl3QgT32j0Uy1FQn8n:Lib 8002
  interface hash: c90866cba76ce4467781ad5d46b4b966
  ABI hash: fd1df3ddec9af6d9455a2ec0ddecf304
  export-list hash: b4baf9143580730161dd9728a992cbd7
  orphan hash: c1b68fadc292e5c276cf066d6d0e1ce2
  flag hash: ff109124cfc5c6538fb1b79e319c5cea
  sig of: Nothing
  used TH splices: False
  where
exports:
  Lib.render
  Lib.testScene
  Lib.Camera
module dependencies:
package dependencies: StateVar-1.1.0.4@StateVar-1.1.0.4-5dJbnTVECtEAhfJXPZKdbO
                      Win32-2.3.1.1@Win32-2.3.1.1
                      adjunctions-4.3@adjunctions-4.3-5CqTSM7liCdC9cb4N2IolK
                      array-0.5.1.1@array-0.5.1.1 base-4.9.1.0
                      base-orphans-0.5.4@base-orphans-0.5.4-ABoxiBf7nXc7Qqh66CgYc9
                      bifunctors-5.4.1@bifunctors-5.4.1-B27lbd71hBJ2VXEJmV4sQN
                      binary-0.8.3.0@binary-0.8.3.0
                      bmp-1.2.6.3@bmp-1.2.6.3-43OLkH0uuwm831pBFpx2PZ
                      bytes-0.15.2@bytes-0.15.2-CoxH8CioAOK8h6CcNcuhd
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      cereal-0.5.4.0@cereal-0.5.4.0-BsAGxfp8yAs3CiRo2E875e
                      comonad-5@comonad-5-ETWy8l913C0Kq2HEAZg6Cb
                      containers-0.5.7.1@containers-0.5.7.1
                      contravariant-1.4@contravariant-1.4-ETyVlWBlFwj93UDOdH22No
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      distributive-0.5.2@distributive-0.5.2-JCgfTXNR3ywAyV7fFWIBI5
                      exceptions-0.8.3@exceptions-0.8.3-ADEDRATtUrMK1JW4zMQ9U
                      free-4.12.4@free-4.12.4-Ab5EFvlPq2CHsY4aRoQQaZ
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      hashable-1.2.5.0@hashable-1.2.5.0-F4MWeNuv2sjJRqBd2T5ul4
                      integer-gmp-1.0.0.1
                      integer-logarithms-1.0.1@integer-logarithms-1.0.1-IEHCuEd5sG4JjSjlx7m5JF
                      kan-extensions-5.0.1@kan-extensions-5.0.1-11Ov83x9jJMC3tpuqa2lhG
                      lens-4.15.1@lens-4.15.1-JIqePnD6ntW5ZEF4vrpOVi
                      linear-1.20.5@linear-1.20.5-CEAsJizrl7jL0iAxtpGqYP
                      loop-0.3.0@loop-0.3.0-4tGn4RSY02pFTwJ5L4CYRr
                      matrix-0.3.5.0@matrix-0.3.5.0-eFZR6K8Lax4OrNeuTQF4y
                      mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      prelude-extras-0.4.0.3@prelude-extras-0.4.0.3-BhL9U5k7NtGJn1itwIHt2Y
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH
                      profunctors-5.2@profunctors-5.2-LrJGukLpH0xCNgg3bhdC7E
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      reflection-2.1.2@reflection-2.1.2-Bem12O1xFGSHr4C2Hyu1c4
                      scientific-0.3.4.10@scientific-0.3.4.10-HRQd1hS6vMV6hvjSlMi8B0
                      semigroupoids-5.1@semigroupoids-5.1-Bv4gPJlZIgxJuJyrAzyy1i
                      stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
                      tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt
                      template-haskell-2.11.1.0
                      text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR
                      time-1.6.0.1@time-1.6.0.1 transformers-0.5.2.0@transformers-0.5.2.0
                      transformers-compat-0.5.1.4@transformers-compat-0.5.1.4-IuFogs8HAVUJBWVNMhtssu
                      unordered-containers-0.2.7.2@unordered-containers-0.2.7.2-8AmrySQXjRGF6VciYs51fM
                      vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.5.0@hashable-1.2.5.0-F4MWeNuv2sjJRqBd2T5ul4:Data.Hashable.Generic
         linear-1.20.5@linear-1.20.5-CEAsJizrl7jL0iAxtpGqYP:Linear.Instances
         reflection-2.1.2@reflection-2.1.2-Bem12O1xFGSHr4C2Hyu1c4:Data.Reflection
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed
family instance modules: adjunctions-4.3@adjunctions-4.3-5CqTSM7liCdC9cb4N2IolK:Data.Functor.Rep
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Compose
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.Functor.Product base-4.9.1.0:Data.Functor.Sum
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         bifunctors-5.4.1@bifunctors-5.4.1-B27lbd71hBJ2VXEJmV4sQN:Data.Bifunctor.Biff
                         bifunctors-5.4.1@bifunctors-5.4.1-B27lbd71hBJ2VXEJmV4sQN:Data.Bifunctor.Clown
                         bifunctors-5.4.1@bifunctors-5.4.1-B27lbd71hBJ2VXEJmV4sQN:Data.Bifunctor.Flip
                         bifunctors-5.4.1@bifunctors-5.4.1-B27lbd71hBJ2VXEJmV4sQN:Data.Bifunctor.Join
                         bifunctors-5.4.1@bifunctors-5.4.1-B27lbd71hBJ2VXEJmV4sQN:Data.Bifunctor.Joker
                         bifunctors-5.4.1@bifunctors-5.4.1-B27lbd71hBJ2VXEJmV4sQN:Data.Bifunctor.Product
                         bifunctors-5.4.1@bifunctors-5.4.1-B27lbd71hBJ2VXEJmV4sQN:Data.Bifunctor.Sum
                         bifunctors-5.4.1@bifunctors-5.4.1-B27lbd71hBJ2VXEJmV4sQN:Data.Bifunctor.Tannen
                         bifunctors-5.4.1@bifunctors-5.4.1-B27lbd71hBJ2VXEJmV4sQN:Data.Bifunctor.Wrapped
                         bytes-0.15.2@bytes-0.15.2-CoxH8CioAOK8h6CcNcuhd:Data.Bytes.Get
                         bytes-0.15.2@bytes-0.15.2-CoxH8CioAOK8h6CcNcuhd:Data.Bytes.Signed
                         bytes-0.15.2@bytes-0.15.2-CoxH8CioAOK8h6CcNcuhd:Data.Bytes.VarInt
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         kan-extensions-5.0.1@kan-extensions-5.0.1-11Ov83x9jJMC3tpuqa2lhG:Data.Functor.Day
                         kan-extensions-5.0.1@kan-extensions-5.0.1-11Ov83x9jJMC3tpuqa2lhG:Data.Functor.Yoneda
                         lens-4.15.1@lens-4.15.1-JIqePnD6ntW5ZEF4vrpOVi:Control.Lens.At
                         lens-4.15.1@lens-4.15.1-JIqePnD6ntW5ZEF4vrpOVi:Control.Lens.Internal.Indexed
                         lens-4.15.1@lens-4.15.1-JIqePnD6ntW5ZEF4vrpOVi:Control.Lens.Reified
                         lens-4.15.1@lens-4.15.1-JIqePnD6ntW5ZEF4vrpOVi:Control.Lens.Tuple
                         lens-4.15.1@lens-4.15.1-JIqePnD6ntW5ZEF4vrpOVi:Control.Lens.Wrapped
                         lens-4.15.1@lens-4.15.1-JIqePnD6ntW5ZEF4vrpOVi:Control.Lens.Zoom
                         linear-1.20.5@linear-1.20.5-CEAsJizrl7jL0iAxtpGqYP:Linear.V1
                         linear-1.20.5@linear-1.20.5-CEAsJizrl7jL0iAxtpGqYP:Linear.V2
                         linear-1.20.5@linear-1.20.5-CEAsJizrl7jL0iAxtpGqYP:Linear.V3
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH:Control.Monad.Primitive
                         profunctors-5.2@profunctors-5.2-LrJGukLpH0xCNgg3bhdC7E:Data.Profunctor.Rep
                         tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt:Data.Tagged
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
                         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Lazy
                         unordered-containers-0.2.7.2@unordered-containers-0.2.7.2-8AmrySQXjRGF6VciYs51fM:Data.HashMap.Base
                         unordered-containers-0.2.7.2@unordered-containers-0.2.7.2-8AmrySQXjRGF6VciYs51fM:Data.HashSet
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Primitive
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Storable
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed.Base
import  -/  base-4.9.1.0:Data.Bits 8dd241433f98eab81ddfb7fcb01616f1
import  -/  base-4.9.1.0:Data.Foldable 254e836c2d813d34e47feb29bb8d40ed
import  -/  base-4.9.1.0:Data.Function e669266e2bc3ac37fceae74061959895
import  -/  base-4.9.1.0:Data.Functor 682cc832c233b71cec70179490a08631
import  -/  base-4.9.1.0:Data.List 7349774f430841349c90dfd1144aea97
import  -/  base-4.9.1.0:Data.Maybe ecf0c6f81372d9b58b142d5e758ea51b
import  -/  base-4.9.1.0:Data.OldList c9282ee91951bdcbd918d2960562c007
import  -/  base-4.9.1.0:Data.Tuple b07f695e7ce8fe20cc8a32abf62f60ec
import  -/  base-4.9.1.0:Data.Word 6cc02853e8d5a49ad2541ba9733cc40b
import  -/  base-4.9.1.0:Debug.Trace 5d15fa13ecafd28bc71693cbbe158c3e
import  -/  base-4.9.1.0:GHC.Base 4caea1123ecf4b46e27cbccd6d279377
import  -/  base-4.9.1.0:GHC.Float b620368aab866c2bb9d3a0a459566b84
import  -/  base-4.9.1.0:GHC.List d11eb227c1c6fbfd89bb781d72eaea0d
import  -/  base-4.9.1.0:GHC.Num 38b8aac8807c096c7f3ca3c1eff02939
import  -/  base-4.9.1.0:GHC.Real b88ae4a48c079652623073a5bbf5c9b0
import  -/  base-4.9.1.0:GHC.Show eca5834daba3b6a2bbbe64ab52056707
import  -/  base-4.9.1.0:Prelude 74b3e204395920329f6de9d97206abe9
import  -/  bmp-1.2.6.3@bmp-1.2.6.3-43OLkH0uuwm831pBFpx2PZ:Codec.BMP f253e1e3362fb0895097753fdd868c2d
import  -/  bmp-1.2.6.3@bmp-1.2.6.3-43OLkH0uuwm831pBFpx2PZ:Codec.BMP.Pack d018f6b73ce19992cca07fa6277f2b62
import  -/  bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString d0429fd72d8924fe9c02ccbe4235f334
import  -/  bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Internal f93c775d03517ec3bd95675a19a7df57
import  -/  ghc-prim-0.5.0.0:GHC.Classes 16d48e012d23eaef9bca91ccdd572c02
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  linear-1.20.5@linear-1.20.5-CEAsJizrl7jL0iAxtpGqYP:Linear.V3 2c30ff802e0fec4e882aac9ad5111240
import  -/  linear-1.20.5@linear-1.20.5-CEAsJizrl7jL0iAxtpGqYP:Linear.Vector f2485f629461d2d28b58432bd5ddf98f
import  -/  matrix-0.3.5.0@matrix-0.3.5.0-eFZR6K8Lax4OrNeuTQF4y:Data.Matrix 2de8b1528e8778fd4bf7452f8e58a0dc
import  -/  random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog:System.Random 4c90117f915e12291e0c5f588320bf66
f0d0fd2f552894d38c410c7baf688cba
  $fFunctorRGB :: GHC.Base.Functor Lib.RGB
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lib.RGB Lib.$fFunctorRGB_$cfmap Lib.$fFunctorRGB_$c<$ -}
f0d0fd2f552894d38c410c7baf688cba
  $fFunctorRGB_$c<$ :: a -> Lib.RGB b -> Lib.RGB a
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*H>m,
     Unfolding: InlineRule (2, True, False)
                (\ @ a2 @ b1 (eta :: a2) (eta1 :: Lib.RGB b1) ->
                 case eta1 of wild { Lib.RGB r g b2 ->
                 Lib.RGB @ a2 eta eta eta }) -}
f0d0fd2f552894d38c410c7baf688cba
  $fFunctorRGB_$cfmap :: (a -> b) -> Lib.RGB a -> Lib.RGB b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><S,1*U(U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ @ a2 @ b1 (f :: a2 -> b1) (ds1 :: Lib.RGB a2) ->
                 case ds1 of wild { Lib.RGB r g b2 ->
                 Lib.RGB @ b1 (f r) (f g) (f b2) }) -}
d28b80980c4e5b03cfdfd5a5c7d0c9a2
  $fShowMaterial :: GHC.Show.Show a => GHC.Show.Show (Lib.Material a)
  DFunId
  {- Arity: 1, Strictness: <L,U(A,C(U),A)>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ a2 ($dShow :: GHC.Show.Show a2).
                  @ (Lib.Material a2)
                  (Lib.$fShowMaterial_$cshowsPrec @ a2 $dShow)
                  (Lib.$fShowMaterial_$cshow @ a2 $dShow)
                  (Lib.$fShowMaterial_$cshowList @ a2 $dShow) -}
c946143e853fe14e49821f2dea5f5cd3
  $fShowMaterial1 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
45a35f3f91049dc017b321fb022f9ec2
  $fShowMaterial2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Mat {"#) -}
59712810967e4d1d7dbc7d883b37ef53
  $fShowMaterial3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "}"#) -}
4367ea6aa6559d79b47adf262d877ab6
  $fShowMaterial4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "emittance = "#) -}
d32ea8328e5a065a77efc51e6d75d940
  $fShowMaterial5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ", "#) -}
0776f6b2c047993e2404eacc3d2e9c31
  $fShowMaterial6 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# ' '#) -}
0856e1a8de5e1b2ad13e77db8cde7289
  $fShowMaterial7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "RGB"#) -}
4c1d143cc79f6b3623222de86c5023ae
  $fShowMaterial8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "color = "#) -}
d28b80980c4e5b03cfdfd5a5c7d0c9a2
  $fShowMaterial_$cshow ::
    GHC.Show.Show a => Lib.Material a -> GHC.Base.String
  {- Arity: 2,
     Strictness: <L,U(A,C(U),A)><S,1*U(1*U(U,U,U),1*U(U,U,U))>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a2 ($dShow :: GHC.Show.Show a2) (x1 :: Lib.Material a2) ->
                 Lib.$fShowMaterial_$cshowsPrec
                   @ a2
                   $dShow
                   GHC.Show.shows22
                   x1
                   (GHC.Types.[] @ GHC.Types.Char)) -}
d28b80980c4e5b03cfdfd5a5c7d0c9a2
  $fShowMaterial_$cshowList ::
    GHC.Show.Show a => [Lib.Material a] -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,U(A,C(U),A)><S,1*U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a2
                   ($dShow :: GHC.Show.Show a2)
                   (eta :: [Lib.Material a2])
                   (eta1 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (Lib.Material a2)
                   (Lib.$fShowMaterial_$cshowsPrec @ a2 $dShow Lib.$fShowMaterial1)
                   eta
                   eta1) -}
d28b80980c4e5b03cfdfd5a5c7d0c9a2
  $fShowMaterial_$cshowsPrec ::
    GHC.Show.Show a =>
    GHC.Types.Int -> Lib.Material a -> GHC.Show.ShowS
  {- Arity: 4,
     Strictness: <L,U(A,C(U),A)><S(S),1*U(U)><S,1*U(1*U(U,U,U),1*U(U,U,U))><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ @ a2
                   (w :: GHC.Show.Show a2)
                   (w1 :: GHC.Types.Int)
                   (w2 :: Lib.Material a2)
                   (w3 :: GHC.Base.String) ->
                 case w1 of ww { GHC.Types.I# ww1 ->
                 case w2 of ww2 { Lib.Mat ww3 ww4 ->
                 Lib.$w$cshowsPrec @ a2 w ww1 ww3 ww4 w3 } }) -}
f0d0fd2f552894d38c410c7baf688cba
  $fShowRGB :: GHC.Show.Show a => GHC.Show.Show (Lib.RGB a)
  DFunId
  {- Arity: 1, Strictness: <L,U(A,C(U),A)>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ a2 ($dShow :: GHC.Show.Show a2).
                  @ (Lib.RGB a2)
                  (Lib.$fShowRGB_$cshowsPrec @ a2 $dShow)
                  (Lib.$fShowRGB_$cshow @ a2 $dShow)
                  (Lib.$fShowRGB_$cshowList @ a2 $dShow) -}
f0d0fd2f552894d38c410c7baf688cba
  $fShowRGB_$cshow :: GHC.Show.Show a => Lib.RGB a -> GHC.Base.String
  {- Arity: 2, Strictness: <L,U(A,C(U),A)><S,1*U(U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a2 (w :: GHC.Show.Show a2) (w1 :: Lib.RGB a2) ->
                 case w1 of ww { Lib.RGB ww1 ww2 ww3 ->
                 Lib.$w$cshow @ a2 w ww1 ww2 ww3 }) -}
f0d0fd2f552894d38c410c7baf688cba
  $fShowRGB_$cshowList ::
    GHC.Show.Show a => [Lib.RGB a] -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,U(A,C(U),A)><S,1*U><L,U>,
     Unfolding: (\ @ a2
                   ($dShow :: GHC.Show.Show a2)
                   (ls :: [Lib.RGB a2])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (Lib.RGB a2)
                   (\ (x1 :: Lib.RGB a2) (s1 :: GHC.Base.String)[OneShot] ->
                    case x1 of ww { Lib.RGB ww1 ww2 ww3 ->
                    GHC.Base.++
                      @ GHC.Types.Char
                      (Lib.$w$cshow @ a2 $dShow ww1 ww2 ww3)
                      s1 })
                   ls
                   s) -}
f0d0fd2f552894d38c410c7baf688cba
  $fShowRGB_$cshowsPrec ::
    GHC.Show.Show a => GHC.Types.Int -> Lib.RGB a -> GHC.Show.ShowS
  {- Arity: 4, Strictness: <L,U(A,C(U),A)><L,A><S,1*U(U,U,U)><L,1*U>,
     Unfolding: InlineRule (4, True, False)
                (\ @ a2
                   ($dShow :: GHC.Show.Show a2)
                   (ds1 :: GHC.Types.Int)
                   (x1 :: Lib.RGB a2)
                   (s :: GHC.Base.String) ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b1
                      (c1 :: GHC.Types.Char -> b1 -> b1)[OneShot]
                      (n1 :: b1)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b1
                      c1
                      n1
                      (Lib.$fShowRGB_$cshow @ a2 $dShow x1))
                   s) -}
ff0b44bb01018d7ac919d89ed1321424
  $fShowRay :: GHC.Show.Show Lib.Ray
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lib.Ray
                  Lib.$fShowRay_$cshowsPrec
                  Lib.$fShowRay_$cshow
                  Lib.$fShowRay_$cshowList -}
ff0b44bb01018d7ac919d89ed1321424
  $fShowRay1 :: Lib.Ray -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ (w :: Lib.Ray) ->
                 case w of ww { Lib.Ray ww1 ww2 ww3 ->
                 Lib.$w$cshowsPrec1 0# ww1 ww2 ww3 }) -}
c117c4c9beb76fcc1cdda772e1459b4a
  $fShowRay2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "bounces = "#) -}
f571d4c2797ad4b5a3a0b01e438b2dc8
  $fShowRay3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "direction = "#) -}
9d09fa3bc6de087faac3ee59b724a708
  $fShowRay4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "vertex = "#) -}
c5d5babe8b13baf61b8226b25eb77fa9
  $fShowRay5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Ray {"#) -}
ff0b44bb01018d7ac919d89ed1321424
  $fShowRay_$cshow :: Lib.Ray -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U(U,U,U),1*U(U,U,U),U(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x1 :: Lib.Ray) ->
                 Lib.$fShowRay_$cshowsPrec
                   GHC.Show.shows22
                   x1
                   (GHC.Types.[] @ GHC.Types.Char)) -}
ff0b44bb01018d7ac919d89ed1321424
  $fShowRay_$cshowList :: [Lib.Ray] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__ @ Lib.Ray Lib.$fShowRay1) -}
ff0b44bb01018d7ac919d89ed1321424
  $fShowRay_$cshowsPrec :: GHC.Types.Int -> Lib.Ray -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S(S),1*U(U)><S,1*U(1*U(U,U,U),1*U(U,U,U),U(U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Lib.Ray) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Lib.Ray ww3 ww4 ww5 ->
                 Lib.$w$cshowsPrec1 ww1 ww3 ww4 ww5 } }) -}
0820bede9c6242da89c8fc8a72267ab5
  $fShowTriangle :: GHC.Show.Show Lib.Triangle
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lib.Triangle
                  Lib.$fShowTriangle_$cshowsPrec
                  Lib.$fShowTriangle_$cshow
                  Lib.$fShowTriangle_$cshowList -}
0820bede9c6242da89c8fc8a72267ab5
  $fShowTriangle1 :: Lib.Triangle -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ (w :: Lib.Triangle) ->
                 case w of ww { Lib.Triangle ww1 ww2 ww3 ww4 ->
                 Lib.$w$cshowsPrec2 0# ww1 ww2 ww3 ww4 }) -}
451c17653d92cf8aefef16d90fc5a740
  $fShowTriangle2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "material = "#) -}
ea99bef9c4cb7997f5fb7495fba31e18
  $fShowTriangle3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "c = "#) -}
4eaa83b0d2445374c90ee73c975f0f06
  $fShowTriangle4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "b = "#) -}
ec256fb8a7fe4ae7caa19d71c9192da9
  $fShowTriangle5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "a = "#) -}
0a874ce76ccae481243860bf87dd9bcd
  $fShowTriangle6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Triangle {"#) -}
0820bede9c6242da89c8fc8a72267ab5
  $fShowTriangle_$cshow :: Lib.Triangle -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(1*U(U,U,U),1*U(U,U,U),1*U(U,U,U),U(U(U(U),U(U),U(U)),U(U(U),U(U),U(U))))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x1 :: Lib.Triangle) ->
                 Lib.$fShowTriangle_$cshowsPrec
                   GHC.Show.shows22
                   x1
                   (GHC.Types.[] @ GHC.Types.Char)) -}
0820bede9c6242da89c8fc8a72267ab5
  $fShowTriangle_$cshowList :: [Lib.Triangle] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Lib.Triangle
                   Lib.$fShowTriangle1) -}
0820bede9c6242da89c8fc8a72267ab5
  $fShowTriangle_$cshowsPrec ::
    GHC.Types.Int -> Lib.Triangle -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S(S),1*U(U)><S,1*U(1*U(U,U,U),1*U(U,U,U),1*U(U,U,U),U(U(U(U),U(U),U(U)),U(U(U),U(U),U(U))))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Lib.Triangle) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Lib.Triangle ww3 ww4 ww5 ww6 ->
                 Lib.$w$cshowsPrec2 ww1 ww3 ww4 ww5 ww6 } }) -}
08adf93521595a8c14ae73c317f40ed7
  $s!_$slength :: Data.Vector.Vector GHC.Types.Float -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,U,A)>m,
     Inline: [NEVER] -}
14e809ddb2774f0bd4c940eb1fa2632d
  $tc'Mat :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1881897593797589781##
                   16729217556456601624##
                   Lib.$trModule
                   Lib.$tc'Mat1) -}
4f9357eb688762737da03b9f18c51a75
  $tc'Mat1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Mat"#) -}
68fabab5fcb4f0cdc7fb29de1f595ebb
  $tc'RGB :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11466041634694003982##
                   228763357468072060##
                   Lib.$trModule
                   Lib.$tc'RGB1) -}
82b370033c9b6a1b554a609fc7ab8339
  $tc'RGB1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'RGB"#) -}
d112fd25128072405eb2af2a749186a3
  $tc'Ray :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5139667293988020904##
                   17751351827247812118##
                   Lib.$trModule
                   Lib.$tc'Ray1) -}
5cf5654fbfa46780362c4e0f3beb6d3c
  $tc'Ray1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Ray"#) -}
cb86d85d8d582359786be4d65b4b6e15
  $tc'Scene :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16780593898376462182##
                   10934450843780855586##
                   Lib.$trModule
                   Lib.$tc'Scene1) -}
491f46cde996c377165ed306c895e1b7
  $tc'Scene1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Scene"#) -}
d8c1ec7a913732ab88c2f28da9538bd5
  $tc'Trace :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15239349013453040185##
                   13784096142297476920##
                   Lib.$trModule
                   Lib.$tc'Trace1) -}
5d1a108b4153a9ed6b18c776b6e82c99
  $tc'Trace1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Trace"#) -}
d74b4a46efb4b9f80158fea9869a0515
  $tc'Triangle :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   804081144431393569##
                   12908424321893778067##
                   Lib.$trModule
                   Lib.$tc'Triangle1) -}
1d13a665cbdf93a834aca045257132a0
  $tc'Triangle1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Triangle"#) -}
0ea97cf93d261d7b99391004dd714d82
  $tcMaterial :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12421071972296941449##
                   3845445367834352039##
                   Lib.$trModule
                   Lib.$tcMaterial1) -}
89b052fead185a9e76585d4df7ab7173
  $tcMaterial1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Material"#) -}
9cd4b3b388e80a9e0007b0625cad673e
  $tcRGB :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17982719890474409103##
                   13410364644284762943##
                   Lib.$trModule
                   Lib.$tcRGB1) -}
89b3e38b5e78c3b9bcfe30f51ad693e4
  $tcRGB1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "RGB"#) -}
b87d93ebebe44ea8885928666383b059
  $tcRay :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9378833839426883002##
                   630707887492202739##
                   Lib.$trModule
                   Lib.$tcRay1) -}
f70aecedb1b260485c7448ee9b7efe6f
  $tcRay1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Ray"#) -}
c07c2318030cc9060503c8e1a5b3e4f5
  $tcScene :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5058560760149974856##
                   14892272405230383483##
                   Lib.$trModule
                   Lib.$tcScene1) -}
4759c563ceb8e022b3763963124330a1
  $tcScene1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Scene"#) -}
0e356a1676939dbc83879527306916d3
  $tcTraceData :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6373215719043863117##
                   2656262513878005218##
                   Lib.$trModule
                   Lib.$tcTraceData1) -}
439ceefbf70d2ea62b061c93d6dda2db
  $tcTraceData1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "TraceData"#) -}
2d8442ef95e0344c22e74a85fe194d57
  $tcTriangle :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13244850499882248141##
                   13884151698779861246##
                   Lib.$trModule
                   Lib.$tcTriangle1) -}
5d6b58177144f346ed28a8f6b0fa13bf
  $tcTriangle1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Triangle"#) -}
15a9db80874e946fdcca36a2fa18c69c
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Lib.$trModule2 Lib.$trModule1) -}
48123c83398116fc728a77a0c5bb83a9
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Lib"#) -}
a60a56ae94f005cfe85d07ec10b884c1
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "raytrace-0.1.0.0-LqVbAl3QgT32j0Uy1FQn8n"#) -}
a44dbdc40c6a0a253324e3dae25acdd8
  $w$cshow :: GHC.Show.Show a => a -> a -> a -> GHC.Base.String
  {- Arity: 4, Strictness: <L,U(A,C(U),A)><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ a2
                   (w :: GHC.Show.Show a2)
                   (ww :: a2)
                   (ww1 :: a2)
                   (ww2 :: a2) ->
                 GHC.Base.++
                   @ GHC.Types.Char
                   Lib.$fShowMaterial7
                   (GHC.Types.:
                      @ GHC.Types.Char
                      Lib.$fShowMaterial6
                      (GHC.Base.++
                         @ GHC.Types.Char
                         (GHC.Show.show @ a2 w ww)
                         (GHC.Types.:
                            @ GHC.Types.Char
                            Lib.$fShowMaterial6
                            (GHC.Base.++
                               @ GHC.Types.Char
                               (GHC.Show.show @ a2 w ww1)
                               (GHC.Types.:
                                  @ GHC.Types.Char
                                  Lib.$fShowMaterial6
                                  (GHC.Base.++
                                     @ GHC.Types.Char
                                     (GHC.Show.show @ a2 w ww2)
                                     (GHC.Types.[] @ GHC.Types.Char)))))))) -}
df09e46a866d4448a84d13b2ff558815
  $w$cshowsPrec ::
    GHC.Show.Show a =>
    GHC.Prim.Int#
    -> Lib.RGB a -> Lib.RGB a -> GHC.Base.String -> GHC.Base.String
  {- Arity: 5,
     Strictness: <L,U(A,C(U),A)><S,U><L,1*U(U,U,U)><L,1*U(U,U,U)><L,U>,
     Inline: [0],
     Unfolding: (\ @ a2
                   (w :: GHC.Show.Show a2)
                   (ww :: GHC.Prim.Int#)
                   (ww1 :: Lib.RGB a2)
                   (ww2 :: Lib.RGB a2)
                   (w1 :: GHC.Base.String) ->
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                   = \ (x1 :: GHC.Base.String)[OneShot] ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       Lib.$fShowMaterial2
                       (GHC.Base.++
                          @ GHC.Types.Char
                          Lib.$fShowMaterial8
                          (case ww1 of ww3 { Lib.RGB ww4 ww5 ww6 ->
                           GHC.Base.++
                             @ GHC.Types.Char
                             (Lib.$w$cshow @ a2 w ww4 ww5 ww6)
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Lib.$fShowMaterial5
                                (GHC.Base.++
                                   @ GHC.Types.Char
                                   Lib.$fShowMaterial4
                                   (case ww2 of ww7 { Lib.RGB ww8 ww9 ww10 ->
                                    GHC.Base.++
                                      @ GHC.Types.Char
                                      (Lib.$w$cshow @ a2 w ww8 ww9 ww10)
                                      (GHC.Base.++ @ GHC.Types.Char Lib.$fShowMaterial3 x1) }))) }))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False -> p w1
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows7
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 w1)) }) -}
8db571819f0304cef0750a598740ee5a
  $w$cshowsPrec1 ::
    GHC.Prim.Int#
    -> Linear.V3.V3 GHC.Types.Float
    -> Linear.V3.V3 GHC.Types.Float
    -> GHC.Types.Int
    -> GHC.Show.ShowS
  {- Arity: 4, Strictness: <S,U><L,1*U(U,U,U)><L,1*U(U,U,U)><L,U(U)>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: Linear.V3.V3 GHC.Types.Float)
                   (ww2 :: Linear.V3.V3 GHC.Types.Float)
                   (ww3 :: GHC.Types.Int) ->
                 let {
                   f :: GHC.Base.String -> GHC.Base.String
                   = case ww1 of ww4 { Linear.V3.V3 ww5 ww6 ww7 ->
                     Linear.V3.$w$cshowsPrec
                       @ GHC.Types.Float
                       GHC.Float.$fShowFloat
                       0#
                       ww5
                       ww6
                       ww7 }
                 } in
                 let {
                   f1 :: GHC.Base.String -> GHC.Base.String
                   = case ww2 of ww4 { Linear.V3.V3 ww5 ww6 ww7 ->
                     Linear.V3.$w$cshowsPrec
                       @ GHC.Types.Float
                       GHC.Float.$fShowFloat
                       0#
                       ww5
                       ww6
                       ww7 }
                 } in
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                   = \ (x1 :: GHC.Base.String) ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       Lib.$fShowRay5
                       (GHC.Base.++
                          @ GHC.Types.Char
                          Lib.$fShowRay4
                          (f (GHC.Base.++
                                @ GHC.Types.Char
                                Lib.$fShowMaterial5
                                (GHC.Base.++
                                   @ GHC.Types.Char
                                   Lib.$fShowRay3
                                   (f1
                                      (GHC.Base.++
                                         @ GHC.Types.Char
                                         Lib.$fShowMaterial5
                                         (GHC.Base.++
                                            @ GHC.Types.Char
                                            Lib.$fShowRay2
                                            (case ww3 of ww4 { GHC.Types.I# ww5 ->
                                             case GHC.Show.$wshowSignedInt
                                                    0#
                                                    ww5
                                                    (GHC.Base.++
                                                       @ GHC.Types.Char
                                                       Lib.$fShowMaterial3
                                                       x1) of ww6 { (#,#) ww7 ww8 ->
                                             GHC.Types.: @ GHC.Types.Char ww7 ww8 } }))))))))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False -> p
                   GHC.Types.True
                   -> \ (x1 :: GHC.Base.String) ->
                      GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows7
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 x1)) }) -}
baed82c626cd7586571a4a96c08e1735
  $w$cshowsPrec2 ::
    GHC.Prim.Int#
    -> Linear.V3.V3 GHC.Types.Float
    -> Linear.V3.V3 GHC.Types.Float
    -> Linear.V3.V3 GHC.Types.Float
    -> Lib.Material GHC.Types.Float
    -> GHC.Show.ShowS
  {- Arity: 5,
     Strictness: <S,U><L,1*U(U,U,U)><L,1*U(U,U,U)><L,1*U(U,U,U)><L,U(U(U(U),U(U),U(U)),U(U(U),U(U),U(U)))>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: Linear.V3.V3 GHC.Types.Float)
                   (ww2 :: Linear.V3.V3 GHC.Types.Float)
                   (ww3 :: Linear.V3.V3 GHC.Types.Float)
                   (ww4 :: Lib.Material GHC.Types.Float) ->
                 let {
                   f :: GHC.Base.String -> GHC.Base.String
                   = case ww1 of ww5 { Linear.V3.V3 ww6 ww7 ww8 ->
                     Linear.V3.$w$cshowsPrec
                       @ GHC.Types.Float
                       GHC.Float.$fShowFloat
                       0#
                       ww6
                       ww7
                       ww8 }
                 } in
                 let {
                   f1 :: GHC.Base.String -> GHC.Base.String
                   = case ww2 of ww5 { Linear.V3.V3 ww6 ww7 ww8 ->
                     Linear.V3.$w$cshowsPrec
                       @ GHC.Types.Float
                       GHC.Float.$fShowFloat
                       0#
                       ww6
                       ww7
                       ww8 }
                 } in
                 let {
                   f2 :: GHC.Base.String -> GHC.Base.String
                   = case ww3 of ww5 { Linear.V3.V3 ww6 ww7 ww8 ->
                     Linear.V3.$w$cshowsPrec
                       @ GHC.Types.Float
                       GHC.Float.$fShowFloat
                       0#
                       ww6
                       ww7
                       ww8 }
                 } in
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                   = \ (x1 :: GHC.Base.String) ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       Lib.$fShowTriangle6
                       (GHC.Base.++
                          @ GHC.Types.Char
                          Lib.$fShowTriangle5
                          (f (GHC.Base.++
                                @ GHC.Types.Char
                                Lib.$fShowMaterial5
                                (GHC.Base.++
                                   @ GHC.Types.Char
                                   Lib.$fShowTriangle4
                                   (f1
                                      (GHC.Base.++
                                         @ GHC.Types.Char
                                         Lib.$fShowMaterial5
                                         (GHC.Base.++
                                            @ GHC.Types.Char
                                            Lib.$fShowTriangle3
                                            (f2
                                               (GHC.Base.++
                                                  @ GHC.Types.Char
                                                  Lib.$fShowMaterial5
                                                  (GHC.Base.++
                                                     @ GHC.Types.Char
                                                     Lib.$fShowTriangle2
                                                     (case ww4 of ww5 { Lib.Mat ww6 ww7 ->
                                                      Lib.$w$s$cshowsPrec
                                                        0#
                                                        ww6
                                                        ww7
                                                        (GHC.Base.++
                                                           @ GHC.Types.Char
                                                           Lib.$fShowMaterial3
                                                           x1) })))))))))))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False -> p
                   GHC.Types.True
                   -> \ (x1 :: GHC.Base.String) ->
                      GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows7
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 x1)) }) -}
9f5787b4b882ea785346beb253fd834b
  $w$s$cshow ::
    GHC.Types.Float
    -> GHC.Types.Float -> GHC.Types.Float -> GHC.Base.String
  {- Arity: 3, Strictness: <L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Types.Float)
                   (ww1 :: GHC.Types.Float)
                   (ww2 :: GHC.Types.Float) ->
                 GHC.Base.++
                   @ GHC.Types.Char
                   Lib.$fShowMaterial7
                   (GHC.Types.:
                      @ GHC.Types.Char
                      Lib.$fShowMaterial6
                      (case ww of ww3 { GHC.Types.F# ww4 ->
                       GHC.Base.++
                         @ GHC.Types.Char
                         (GHC.Float.$w$sshowSignedFloat1
                            GHC.Float.$fShowFloat_$sshowFloat
                            GHC.Show.shows22
                            ww4
                            (GHC.Types.[] @ GHC.Types.Char))
                         (GHC.Types.:
                            @ GHC.Types.Char
                            Lib.$fShowMaterial6
                            (case ww1 of ww5 { GHC.Types.F# ww6 ->
                             GHC.Base.++
                               @ GHC.Types.Char
                               (GHC.Float.$w$sshowSignedFloat1
                                  GHC.Float.$fShowFloat_$sshowFloat
                                  GHC.Show.shows22
                                  ww6
                                  (GHC.Types.[] @ GHC.Types.Char))
                               (GHC.Types.:
                                  @ GHC.Types.Char
                                  Lib.$fShowMaterial6
                                  (case ww2 of ww7 { GHC.Types.F# ww8 ->
                                   GHC.Base.++
                                     @ GHC.Types.Char
                                     (GHC.Float.$w$sshowSignedFloat1
                                        GHC.Float.$fShowFloat_$sshowFloat
                                        GHC.Show.shows22
                                        ww8
                                        (GHC.Types.[] @ GHC.Types.Char))
                                     (GHC.Types.[] @ GHC.Types.Char) })) })) }))) -}
9c62d24d987b46ebcf34500cb9d35813
  $w$s$cshowsPrec ::
    GHC.Prim.Int#
    -> Lib.RGB GHC.Types.Float
    -> Lib.RGB GHC.Types.Float
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 4,
     Strictness: <S,U><L,1*U(1*U(U),1*U(U),1*U(U))><L,1*U(1*U(U),1*U(U),1*U(U))><L,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: Lib.RGB GHC.Types.Float)
                   (ww2 :: Lib.RGB GHC.Types.Float)
                   (w :: GHC.Base.String) ->
                 let {
                   g :: GHC.Base.String -> GHC.Base.String
                     {- Arity: 1, Strictness: <L,1*U> -}
                   = \ (x1 :: GHC.Base.String)[OneShot] ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       Lib.$fShowMaterial8
                       (case ww1 of ww3 { Lib.RGB ww4 ww5 ww6 ->
                        GHC.Base.++
                          @ GHC.Types.Char
                          (Lib.$w$s$cshow ww4 ww5 ww6)
                          (GHC.Base.++
                             @ GHC.Types.Char
                             Lib.$fShowMaterial5
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Lib.$fShowMaterial4
                                (case ww2 of ww7 { Lib.RGB ww8 ww9 ww10 ->
                                 GHC.Base.++
                                   @ GHC.Types.Char
                                   (Lib.$w$s$cshow ww8 ww9 ww10)
                                   (GHC.Base.++ @ GHC.Types.Char Lib.$fShowMaterial3 x1) }))) })
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False
                   -> GHC.Base.++ @ GHC.Types.Char Lib.$fShowMaterial2 (g w)
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows7
                        (GHC.Base.++
                           @ GHC.Types.Char
                           Lib.$fShowMaterial2
                           (g (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 w))) }) -}
80a23a548766034b3d638e8c593f17f4
  $wc ::
    GHC.Types.Float
    -> GHC.Types.Float
    -> GHC.Types.Float
    -> (# GHC.Types.Float, GHC.Types.Float, GHC.Types.Float #)
  {- Arity: 3, Strictness: <S,U><S,U><S,U>, Inline: [0] -}
b0766b5f46ebc7de9b6c41ddb965351f
  type Camera = GHC.Types.Float
e23433b1b52e9a33a0b485cdd7904e84
  type ImageBuffer = Data.ByteString.Internal.ByteString
d28b80980c4e5b03cfdfd5a5c7d0c9a2
  data Material a = Mat {color :: Lib.RGB a, emittance :: Lib.RGB a}
f0d0fd2f552894d38c410c7baf688cba
  data RGB a = RGB a a a
ff0b44bb01018d7ac919d89ed1321424
  data Ray
    = Ray {vertex :: Linear.V3.V3 GHC.Types.Float,
           direction :: Linear.V3.V3 GHC.Types.Float,
           bounces :: GHC.Types.Int}
33bac428ad6f22abd7c00a1cf432c7dc
  data Scene = Scene {tris :: [Lib.Triangle]}
37cdb314f5a0fedd2947f5640da19c27
  data TraceData
    = Trace {intersectPoint :: Linear.V3.V3 GHC.Types.Float,
             dist :: GHC.Types.Float,
             mat :: Lib.Material GHC.Types.Float,
             surfNorm :: Linear.V3.V3 GHC.Types.Float}
0820bede9c6242da89c8fc8a72267ab5
  data Triangle
    = Triangle {a :: Linear.V3.V3 GHC.Types.Float,
                b :: Linear.V3.V3 GHC.Types.Float,
                c :: Linear.V3.V3 GHC.Types.Float,
                material :: Lib.Material GHC.Types.Float}
dae181097c9e5d957cbfe05058aae1ac
  a :: Lib.Triangle -> Linear.V3.V3 GHC.Types.Float
  RecSel Left Lib.Triangle
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(1*U(U,U,U),A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: Lib.Triangle) ->
                 case ds1 of wild { Lib.Triangle ds2 ds3 ds4 ds5 -> ds2 }) -}
c4301b51106db6f6d18c6a9dee322f0e
  b :: Lib.Triangle -> Linear.V3.V3 GHC.Types.Float
  RecSel Left Lib.Triangle
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLL),1*U(A,1*U(U,U,U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: Lib.Triangle) ->
                 case ds1 of wild { Lib.Triangle ds2 ds3 ds4 ds5 -> ds3 }) -}
c199a3173aea3775db5ebe73e362b5f0
  bounces :: Lib.Ray -> GHC.Types.Int
  RecSel Left Lib.Ray
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,1*U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: Lib.Ray) ->
                 case ds1 of wild { Lib.Ray ds2 ds3 ds4 -> ds4 }) -}
a8726f9be95ed47930fc4fa0aabeb9ba
  c :: Lib.Triangle -> Linear.V3.V3 GHC.Types.Float
  RecSel Left Lib.Triangle
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSL),1*U(A,A,1*U(U,U,U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: Lib.Triangle) ->
                 case ds1 of wild { Lib.Triangle ds2 ds3 ds4 ds5 -> ds4 }) -}
5cac28d87e06308be8a644a566ae1f67
  color :: Lib.Material a -> Lib.RGB a
  RecSel Left Lib.Material
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U(U,U,U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ a2 (ds1 :: Lib.Material a2) ->
                 case ds1 of wild { Lib.Mat ds2 ds3 -> ds2 }) -}
b633e29888b8e3f998ca5163fb2f9c09
  direction :: Lib.Ray -> Linear.V3.V3 GHC.Types.Float
  RecSel Left Lib.Ray
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSL),1*U(A,1*U(U,U,U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: Lib.Ray) ->
                 case ds1 of wild { Lib.Ray ds2 ds3 ds4 -> ds3 }) -}
446b657198cfd771ceea297193de48bc
  dist :: Lib.TraceData -> GHC.Types.Float
  RecSel Left Lib.TraceData
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLL),1*U(A,1*U(U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: Lib.TraceData) ->
                 case ds1 of wild { Lib.Trace ds2 ds3 ds4 ds5 -> ds3 }) -}
4146ab72ae953adb6e2414f74f7d0cf8
  emittance :: Lib.Material a -> Lib.RGB a
  RecSel Left Lib.Material
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U(U,U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ a2 (ds1 :: Lib.Material a2) ->
                 case ds1 of wild { Lib.Mat ds2 ds3 -> ds3 }) -}
f2940fa4163a53a73cf50c6a268376bf
  intersectPoint :: Lib.TraceData -> Linear.V3.V3 GHC.Types.Float
  RecSel Left Lib.TraceData
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(1*U(U,U,U),A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: Lib.TraceData) ->
                 case ds1 of wild { Lib.Trace ds2 ds3 ds4 ds5 -> ds2 }) -}
5fc100a8e70a6ab4c03584df32ea6bda
  lime :: Lib.RGB GHC.Types.Float
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Lib.RGB
                   @ GHC.Types.Float
                   Lib.testScene16
                   Lib.testScene18
                   Lib.testScene22) -}
0c25e7bf2760edb99bcd09163eeb8e5d
  mat :: Lib.TraceData -> Lib.Material GHC.Types.Float
  RecSel Left Lib.TraceData
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSL),1*U(A,A,1*U(U,U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: Lib.TraceData) ->
                 case ds1 of wild { Lib.Trace ds2 ds3 ds4 ds5 -> ds4 }) -}
1def73b7f181cca64a5e91e259c94cfe
  material :: Lib.Triangle -> Lib.Material GHC.Types.Float
  RecSel Left Lib.Triangle
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLS),1*U(A,A,A,1*U(U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: Lib.Triangle) ->
                 case ds1 of wild { Lib.Triangle ds2 ds3 ds4 ds5 -> ds5 }) -}
4890c27628b7b8ecf11faa96743eb3a1
  noEmission :: Lib.RGB GHC.Types.Float
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Lib.RGB
                   @ GHC.Types.Float
                   Lib.testScene22
                   Lib.testScene22
                   Lib.testScene22) -}
0ee8ff2864bc533f9664bed143bb4c4c
  render ::
    Lib.Camera
    -> Lib.Scene
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Base.Maybe GHC.Base.String
    -> GHC.Types.IO ()
  {- Arity: 6,
     Strictness: <L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.render1
                  `cast`
                (<Lib.Camera>_R
                 ->_R <Lib.Scene>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R <GHC.Base.Maybe GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
7390a4dc0d588a04a5b558d4fe343362
  render1 ::
    Lib.Camera
    -> Lib.Scene
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Base.Maybe GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 6,
     Strictness: <L,U(U)><L,U(U)><L,U(U)><L,U(U)><L,1*U><S,U> -}
53d8ee80b82520b3cf32ca1d7298c83e
  surfNorm :: Lib.TraceData -> Linear.V3.V3 GHC.Types.Float
  RecSel Left Lib.TraceData
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLS),1*U(A,A,A,1*U(U,U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: Lib.TraceData) ->
                 case ds1 of wild { Lib.Trace ds2 ds3 ds4 ds5 -> ds5 }) -}
c79121a037fc215d9ef81404e8ae813b
  testScene :: Lib.Scene
  {- Strictness: m, Unfolding: (Lib.Scene Lib.testScene1) -}
253b23e66b784303d14541b989ada0c2
  testScene1 :: [Lib.Triangle]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lib.Triangle
                   Lib.testScene52
                   Lib.testScene2) -}
e3c1c222716938f2658ee08db13793ae
  testScene10 :: [Lib.Triangle]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lib.Triangle
                   Lib.testScene23
                   Lib.testScene11) -}
53562271c91479a77b4473b52f387a88
  testScene11 :: [Lib.Triangle]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lib.Triangle
                   Lib.testScene12
                   (GHC.Types.[] @ Lib.Triangle)) -}
41d030b384fe32b648009b49c8360c95
  testScene12 :: Lib.Triangle
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Lib.Triangle
                   Lib.testScene21
                   Lib.testScene19
                   Lib.testScene17
                   Lib.testScene13) -}
f8d64cb738f1b447f642ddc270488998
  testScene13 :: Lib.Material GHC.Types.Float
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Lib.Mat @ GHC.Types.Float Lib.white Lib.testScene14) -}
e375b30739a1c0c3a0161ea145f160a2
  testScene14 :: Lib.RGB GHC.Types.Float
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Lib.RGB
                   @ GHC.Types.Float
                   Lib.testScene15
                   Lib.testScene15
                   Lib.testScene15) -}
18a86ea685a0d827e460189e44935051
  testScene15 :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# 100.0#) -}
77ddaa5a357ce07f2078bd1898df4397
  testScene16 :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# 1.0#) -}
9f1f62be464178c83bd85d662fae95c0
  testScene17 :: Linear.V3.V3 GHC.Types.Float
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Linear.V3.V3
                   @ GHC.Types.Float
                   Lib.testScene16
                   Lib.testScene16
                   Lib.testScene18) -}
c86da3634a0e6f82cf47f98764c55d71
  testScene18 :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# 2.0#) -}
034b02bd613cb9422d602be0a49764d6
  testScene19 :: Linear.V3.V3 GHC.Types.Float
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Linear.V3.V3
                   @ GHC.Types.Float
                   Lib.testScene16
                   Lib.testScene20
                   Lib.testScene18) -}
f3bddf6a2820807ac274ed3c90365529
  testScene2 :: [Lib.Triangle]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lib.Triangle
                   Lib.testScene51
                   Lib.testScene3) -}
5a41752edec1fafa706c1b3376793880
  testScene20 :: GHC.Types.Float
  {- HasNoCafRefs, Unfolding: (GHC.Types.F# -1.0#) -}
cb06179814c4caa9f07ed2a12e6155ea
  testScene21 :: Linear.V3.V3 GHC.Types.Float
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Linear.V3.V3
                   @ GHC.Types.Float
                   Lib.testScene20
                   Lib.testScene22
                   Lib.testScene18) -}
c45b4c5b0541813e3d300ab2a3cbc723
  testScene22 :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# 0.0#) -}
5337f35932b39d3c38167de5361022c9
  testScene23 :: Lib.Triangle
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Lib.Triangle
                   Lib.testScene30
                   Lib.testScene27
                   Lib.testScene25
                   Lib.testScene24) -}
7ecbef9b75480bc710d23c42b68d40a7
  testScene24 :: Lib.Material GHC.Types.Float
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Lib.Mat @ GHC.Types.Float Lib.white Lib.noEmission) -}
0d0212145d0e30512559387bea0c22f1
  testScene25 :: Linear.V3.V3 GHC.Types.Float
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Linear.V3.V3
                   @ GHC.Types.Float
                   Lib.testScene26
                   Lib.testScene22
                   Lib.testScene26) -}
815bcd6f87e85710a23176a7fffc437f
  testScene26 :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# 10.0#) -}
6997e3b22b3a1adbb808c1970ce155df
  testScene27 :: Linear.V3.V3 GHC.Types.Float
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Linear.V3.V3
                   @ GHC.Types.Float
                   Lib.testScene26
                   Lib.testScene29
                   Lib.testScene28) -}
04efb719f14615ece094c311dc8c00a6
  testScene28 :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# -2.0#) -}
446d0857e5c430e957be0afd40a30506
  testScene29 :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# -10.0#) -}
8c9442cbe8088c723698c46ca754e808
  testScene3 :: [Lib.Triangle]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lib.Triangle
                   Lib.testScene50
                   Lib.testScene4) -}
306c24bdad0c512f35b2a3e593aa5c97
  testScene30 :: Linear.V3.V3 GHC.Types.Float
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Linear.V3.V3
                   @ GHC.Types.Float
                   Lib.testScene26
                   Lib.testScene26
                   Lib.testScene28) -}
a1cd3005167213821f43b41b40d79693
  testScene31 :: Lib.Triangle
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Lib.Triangle
                   Lib.testScene30
                   Lib.testScene27
                   Lib.testScene32
                   Lib.testScene24) -}
90d5e57e9d6441ed8f44982ad4b8743b
  testScene32 :: Linear.V3.V3 GHC.Types.Float
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Linear.V3.V3
                   @ GHC.Types.Float
                   Lib.testScene29
                   Lib.testScene22
                   Lib.testScene28) -}
a0f60bcb0069d503c4126990f81a5470
  testScene33 :: Lib.Triangle
  {- Strictness: m,
     Unfolding: (Lib.Triangle Lib.v4 Lib.v1 Lib.v6 Lib.testScene34) -}
f36e58db5ef0b511912965f6e0b64300
  testScene34 :: Lib.Material GHC.Types.Float
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Lib.Mat @ GHC.Types.Float Lib.lime Lib.noEmission) -}
9f3ff584641692ff35e8ec2f1571820f
  testScene35 :: [Linear.V3.V3 GHC.Types.Float]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Linear.V3.V3 GHC.Types.Float)
                   Lib.testScene44
                   Lib.testScene36) -}
d6abd27800fe5da54f10449da0d15f01
  testScene36 :: [Linear.V3.V3 GHC.Types.Float]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Linear.V3.V3 GHC.Types.Float)
                   Lib.testScene43
                   Lib.testScene37) -}
513d03cb7bb11ed05e6ce098f7f3a5b8
  testScene37 :: [Linear.V3.V3 GHC.Types.Float]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Linear.V3.V3 GHC.Types.Float)
                   Lib.testScene42
                   Lib.testScene38) -}
4c447bb7282d454e32917bf9eec5dec3
  testScene38 :: [Linear.V3.V3 GHC.Types.Float]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Linear.V3.V3 GHC.Types.Float)
                   Lib.testScene41
                   Lib.testScene39) -}
e840ba6ba351ae69c151bb6259c74221
  testScene39 :: [Linear.V3.V3 GHC.Types.Float]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Linear.V3.V3 GHC.Types.Float)
                   Lib.testScene40
                   (GHC.Types.[] @ (Linear.V3.V3 GHC.Types.Float))) -}
5631a7b31b3fa9b95883f9a8d8851bca
  testScene4 :: [Lib.Triangle]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lib.Triangle
                   Lib.testScene49
                   Lib.testScene5) -}
c6a7401eb9552110915691ce2eadc574
  testScene40 :: Linear.V3.V3 GHC.Types.Float
  {- Unfolding: (case Lib.$wc
                        Lib.testScene22
                        Lib.testScene22
                        Lib.testScene20 of ww { (#,,#) ww1 ww2 ww3 ->
                 Linear.V3.V3 @ GHC.Types.Float ww1 ww2 ww3 }) -}
bb2c133cc92213c436b310ccc4fab6d6
  testScene41 :: Linear.V3.V3 GHC.Types.Float
  {- Unfolding: (case Lib.$wc
                        Lib.testScene22
                        Lib.testScene22
                        Lib.testScene16 of ww { (#,,#) ww1 ww2 ww3 ->
                 Linear.V3.V3 @ GHC.Types.Float ww1 ww2 ww3 }) -}
bc43a9cd7d50143f70e9e48c8f7ab29b
  testScene42 :: Linear.V3.V3 GHC.Types.Float
  {- Unfolding: (case Lib.$wc
                        Lib.testScene22
                        Lib.testScene16
                        Lib.testScene22 of ww { (#,,#) ww1 ww2 ww3 ->
                 Linear.V3.V3 @ GHC.Types.Float ww1 ww2 ww3 }) -}
908ec26983f227c45fdd6e5f6cca1dee
  testScene43 :: Linear.V3.V3 GHC.Types.Float
  {- Unfolding: (case Lib.$wc
                        Lib.testScene20
                        Lib.testScene22
                        Lib.testScene22 of ww { (#,,#) ww1 ww2 ww3 ->
                 Linear.V3.V3 @ GHC.Types.Float ww1 ww2 ww3 }) -}
9bcd0d6620243fb9ac8d0c84bd8577a2
  testScene44 :: Linear.V3.V3 GHC.Types.Float
  {- Unfolding: (case Lib.$wc
                        Lib.testScene22
                        Lib.testScene20
                        Lib.testScene22 of ww { (#,,#) ww1 ww2 ww3 ->
                 Linear.V3.V3 @ GHC.Types.Float ww1 ww2 ww3 }) -}
e3f7992990f6a5d0fba811b051f8fe44
  testScene45 :: Linear.V3.V3 GHC.Types.Float
  {- Unfolding: (case Lib.$wc
                        Lib.testScene16
                        Lib.testScene22
                        Lib.testScene22 of ww { (#,,#) ww1 ww2 ww3 ->
                 Linear.V3.V3 @ GHC.Types.Float ww1 ww2 ww3 }) -}
6448d6a00b0af6669a243bbe55d0276b
  testScene46 :: Lib.Triangle
  {- Strictness: m,
     Unfolding: (Lib.Triangle Lib.v3 Lib.v4 Lib.v6 Lib.testScene34) -}
d41ef341af58b32a669115a047e36ca4
  testScene47 :: Lib.Triangle
  {- Strictness: m,
     Unfolding: (Lib.Triangle Lib.v2 Lib.v3 Lib.v6 Lib.testScene34) -}
50518023dc74a3a0a210766d810c164f
  testScene48 :: Lib.Triangle
  {- Strictness: m,
     Unfolding: (Lib.Triangle Lib.v1 Lib.v2 Lib.v6 Lib.testScene34) -}
3b680d18c4a42cf6a36f5f22b1d00164
  testScene49 :: Lib.Triangle
  {- Strictness: m,
     Unfolding: (Lib.Triangle Lib.v1 Lib.v4 Lib.v5 Lib.testScene34) -}
0b060274dea19a57949cb2137a7dbd1f
  testScene5 :: [Lib.Triangle]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lib.Triangle
                   Lib.testScene48
                   Lib.testScene6) -}
6e90f6e63d566aa571d02201ea697265
  testScene50 :: Lib.Triangle
  {- Strictness: m,
     Unfolding: (Lib.Triangle Lib.v4 Lib.v3 Lib.v5 Lib.testScene34) -}
bd7daaab1997d37a15d07e6f81824c65
  testScene51 :: Lib.Triangle
  {- Strictness: m,
     Unfolding: (Lib.Triangle Lib.v3 Lib.v2 Lib.v5 Lib.testScene34) -}
84920c82d093ed40ee245897072e56f5
  testScene52 :: Lib.Triangle
  {- Strictness: m,
     Unfolding: (Lib.Triangle Lib.v2 Lib.v1 Lib.v5 Lib.testScene34) -}
cfbc1f6ebe3bf5e31cd6aa27d9822ec6
  testScene6 :: [Lib.Triangle]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lib.Triangle
                   Lib.testScene47
                   Lib.testScene7) -}
2260adadb5fee4afd0f9e8910d2a385f
  testScene7 :: [Lib.Triangle]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lib.Triangle
                   Lib.testScene46
                   Lib.testScene8) -}
222f0cc8be5430249e3b89f485027361
  testScene8 :: [Lib.Triangle]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lib.Triangle
                   Lib.testScene33
                   Lib.testScene9) -}
2e2348b908e9df38a5cd165258d7922f
  testScene9 :: [Lib.Triangle]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lib.Triangle
                   Lib.testScene31
                   Lib.testScene10) -}
3bca371621119f39f58e06f08d58c4fb
  testSceneVerts :: [Linear.V3.V3 GHC.Types.Float]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Linear.V3.V3 GHC.Types.Float)
                   Lib.testScene45
                   Lib.testScene35) -}
4c7d579f6570f7a176d369b8946b1bb4
  tris :: Lib.Scene -> [Lib.Triangle]
  RecSel Left Lib.Scene
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: Lib.Scene) ->
                 case ds1 of wild { Lib.Scene ds2 -> ds2 }) -}
39a57c2c6235ed32876d15fe94278f96
  v1 :: Linear.V3.V3 GHC.Types.Float
  {- Unfolding: (GHC.List.$w!!
                   @ (Linear.V3.V3 GHC.Types.Float)
                   Lib.testSceneVerts
                   0#) -}
2241ab7dbc38a1000424bcb066cce557
  v2 :: Linear.V3.V3 GHC.Types.Float
  {- Unfolding: (GHC.List.$w!!
                   @ (Linear.V3.V3 GHC.Types.Float)
                   Lib.testSceneVerts
                   1#) -}
c0a2c32a458f14e98207f187bc5eaea9
  v3 :: Linear.V3.V3 GHC.Types.Float
  {- Unfolding: (GHC.List.$w!!
                   @ (Linear.V3.V3 GHC.Types.Float)
                   Lib.testSceneVerts
                   2#) -}
63a5252c5d022389473b0486d23824ee
  v4 :: Linear.V3.V3 GHC.Types.Float
  {- Unfolding: (GHC.List.$w!!
                   @ (Linear.V3.V3 GHC.Types.Float)
                   Lib.testSceneVerts
                   3#) -}
2871aeb58fbb319ea4d23d66b85da379
  v5 :: Linear.V3.V3 GHC.Types.Float
  {- Unfolding: (GHC.List.$w!!
                   @ (Linear.V3.V3 GHC.Types.Float)
                   Lib.testSceneVerts
                   4#) -}
8eee7c030bb120317a3721be03417f0c
  v6 :: Linear.V3.V3 GHC.Types.Float
  {- Unfolding: (GHC.List.$w!!
                   @ (Linear.V3.V3 GHC.Types.Float)
                   Lib.testSceneVerts
                   5#) -}
de7761fc2280e2047a3c74a6dd54d6aa
  vertex :: Lib.Ray -> Linear.V3.V3 GHC.Types.Float
  RecSel Left Lib.Ray
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U(U,U,U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: Lib.Ray) ->
                 case ds1 of wild { Lib.Ray ds2 ds3 ds4 -> ds2 }) -}
ae73de3c333aae8de1d9a9b7519d8c4a
  white :: Lib.RGB GHC.Types.Float
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Lib.RGB
                   @ GHC.Types.Float
                   Lib.testScene16
                   Lib.testScene16
                   Lib.testScene16) -}
instance GHC.Base.Functor [Lib.RGB] = Lib.$fFunctorRGB
instance GHC.Show.Show [Lib.Material] = Lib.$fShowMaterial
instance GHC.Show.Show [Lib.RGB] = Lib.$fShowRGB
instance GHC.Show.Show [Lib.Ray] = Lib.$fShowRay
instance GHC.Show.Show [Lib.Triangle] = Lib.$fShowTriangle
"SPEC/Lib length @ Vector @ Float" [ALWAYS] forall ($dVector :: Data.Vector.Generic.Base.Vector
                                                                  Data.Vector.Vector
                                                                  GHC.Types.Float)
  Data.Vector.Generic.length @ Data.Vector.Vector
                             @ GHC.Types.Float
                             $dVector
  = Lib.$s!_$slength
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

