
==================== FINAL INTERFACE ====================
2017-03-22 06:18:19.1602246 UTC

interface raytrace-0.1.0.0-LqVbAl3QgT32j0Uy1FQn8n:Lib 8002
  interface hash: 4efd5f42f827a20423ff1ed2ff265a62
  ABI hash: 1f0fed446b51e3c505ed6eb662e6c90a
  export-list hash: b4baf9143580730161dd9728a992cbd7
  orphan hash: c1b68fadc292e5c276cf066d6d0e1ce2
  flag hash: ff109124cfc5c6538fb1b79e319c5cea
  sig of: Nothing
  used TH splices: False
  where
exports:
  Lib.render
  Lib.testScene
  Lib.Camera
module dependencies:
package dependencies: StateVar-1.1.0.4@StateVar-1.1.0.4-5dJbnTVECtEAhfJXPZKdbO
                      Win32-2.3.1.1@Win32-2.3.1.1
                      adjunctions-4.3@adjunctions-4.3-5CqTSM7liCdC9cb4N2IolK
                      array-0.5.1.1@array-0.5.1.1 base-4.9.1.0
                      base-orphans-0.5.4@base-orphans-0.5.4-ABoxiBf7nXc7Qqh66CgYc9
                      bifunctors-5.4.1@bifunctors-5.4.1-B27lbd71hBJ2VXEJmV4sQN
                      binary-0.8.3.0@binary-0.8.3.0
                      bmp-1.2.6.3@bmp-1.2.6.3-43OLkH0uuwm831pBFpx2PZ
                      bytes-0.15.2@bytes-0.15.2-CoxH8CioAOK8h6CcNcuhd
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      cereal-0.5.4.0@cereal-0.5.4.0-BsAGxfp8yAs3CiRo2E875e
                      comonad-5@comonad-5-ETWy8l913C0Kq2HEAZg6Cb
                      containers-0.5.7.1@containers-0.5.7.1
                      contravariant-1.4@contravariant-1.4-ETyVlWBlFwj93UDOdH22No
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      distributive-0.5.2@distributive-0.5.2-JCgfTXNR3ywAyV7fFWIBI5
                      exceptions-0.8.3@exceptions-0.8.3-ADEDRATtUrMK1JW4zMQ9U
                      free-4.12.4@free-4.12.4-Ab5EFvlPq2CHsY4aRoQQaZ
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      hashable-1.2.5.0@hashable-1.2.5.0-F4MWeNuv2sjJRqBd2T5ul4
                      integer-gmp-1.0.0.1
                      integer-logarithms-1.0.1@integer-logarithms-1.0.1-IEHCuEd5sG4JjSjlx7m5JF
                      kan-extensions-5.0.1@kan-extensions-5.0.1-11Ov83x9jJMC3tpuqa2lhG
                      lens-4.15.1@lens-4.15.1-JIqePnD6ntW5ZEF4vrpOVi
                      linear-1.20.5@linear-1.20.5-CEAsJizrl7jL0iAxtpGqYP
                      loop-0.3.0@loop-0.3.0-4tGn4RSY02pFTwJ5L4CYRr
                      matrix-0.3.5.0@matrix-0.3.5.0-eFZR6K8Lax4OrNeuTQF4y
                      mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      prelude-extras-0.4.0.3@prelude-extras-0.4.0.3-BhL9U5k7NtGJn1itwIHt2Y
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH
                      profunctors-5.2@profunctors-5.2-LrJGukLpH0xCNgg3bhdC7E
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      reflection-2.1.2@reflection-2.1.2-Bem12O1xFGSHr4C2Hyu1c4
                      scientific-0.3.4.10@scientific-0.3.4.10-HRQd1hS6vMV6hvjSlMi8B0
                      semigroupoids-5.1@semigroupoids-5.1-Bv4gPJlZIgxJuJyrAzyy1i
                      stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
                      tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt
                      template-haskell-2.11.1.0
                      text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR
                      time-1.6.0.1@time-1.6.0.1 transformers-0.5.2.0@transformers-0.5.2.0
                      transformers-compat-0.5.1.4@transformers-compat-0.5.1.4-IuFogs8HAVUJBWVNMhtssu
                      unordered-containers-0.2.7.2@unordered-containers-0.2.7.2-8AmrySQXjRGF6VciYs51fM
                      vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.5.0@hashable-1.2.5.0-F4MWeNuv2sjJRqBd2T5ul4:Data.Hashable.Generic
         linear-1.20.5@linear-1.20.5-CEAsJizrl7jL0iAxtpGqYP:Linear.Instances
         reflection-2.1.2@reflection-2.1.2-Bem12O1xFGSHr4C2Hyu1c4:Data.Reflection
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed
family instance modules: adjunctions-4.3@adjunctions-4.3-5CqTSM7liCdC9cb4N2IolK:Data.Functor.Rep
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Compose
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.Functor.Product base-4.9.1.0:Data.Functor.Sum
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         bifunctors-5.4.1@bifunctors-5.4.1-B27lbd71hBJ2VXEJmV4sQN:Data.Bifunctor.Biff
                         bifunctors-5.4.1@bifunctors-5.4.1-B27lbd71hBJ2VXEJmV4sQN:Data.Bifunctor.Clown
                         bifunctors-5.4.1@bifunctors-5.4.1-B27lbd71hBJ2VXEJmV4sQN:Data.Bifunctor.Flip
                         bifunctors-5.4.1@bifunctors-5.4.1-B27lbd71hBJ2VXEJmV4sQN:Data.Bifunctor.Join
                         bifunctors-5.4.1@bifunctors-5.4.1-B27lbd71hBJ2VXEJmV4sQN:Data.Bifunctor.Joker
                         bifunctors-5.4.1@bifunctors-5.4.1-B27lbd71hBJ2VXEJmV4sQN:Data.Bifunctor.Product
                         bifunctors-5.4.1@bifunctors-5.4.1-B27lbd71hBJ2VXEJmV4sQN:Data.Bifunctor.Sum
                         bifunctors-5.4.1@bifunctors-5.4.1-B27lbd71hBJ2VXEJmV4sQN:Data.Bifunctor.Tannen
                         bifunctors-5.4.1@bifunctors-5.4.1-B27lbd71hBJ2VXEJmV4sQN:Data.Bifunctor.Wrapped
                         bytes-0.15.2@bytes-0.15.2-CoxH8CioAOK8h6CcNcuhd:Data.Bytes.Get
                         bytes-0.15.2@bytes-0.15.2-CoxH8CioAOK8h6CcNcuhd:Data.Bytes.Signed
                         bytes-0.15.2@bytes-0.15.2-CoxH8CioAOK8h6CcNcuhd:Data.Bytes.VarInt
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         kan-extensions-5.0.1@kan-extensions-5.0.1-11Ov83x9jJMC3tpuqa2lhG:Data.Functor.Day
                         kan-extensions-5.0.1@kan-extensions-5.0.1-11Ov83x9jJMC3tpuqa2lhG:Data.Functor.Yoneda
                         lens-4.15.1@lens-4.15.1-JIqePnD6ntW5ZEF4vrpOVi:Control.Lens.At
                         lens-4.15.1@lens-4.15.1-JIqePnD6ntW5ZEF4vrpOVi:Control.Lens.Internal.Indexed
                         lens-4.15.1@lens-4.15.1-JIqePnD6ntW5ZEF4vrpOVi:Control.Lens.Reified
                         lens-4.15.1@lens-4.15.1-JIqePnD6ntW5ZEF4vrpOVi:Control.Lens.Tuple
                         lens-4.15.1@lens-4.15.1-JIqePnD6ntW5ZEF4vrpOVi:Control.Lens.Wrapped
                         lens-4.15.1@lens-4.15.1-JIqePnD6ntW5ZEF4vrpOVi:Control.Lens.Zoom
                         linear-1.20.5@linear-1.20.5-CEAsJizrl7jL0iAxtpGqYP:Linear.V1
                         linear-1.20.5@linear-1.20.5-CEAsJizrl7jL0iAxtpGqYP:Linear.V2
                         linear-1.20.5@linear-1.20.5-CEAsJizrl7jL0iAxtpGqYP:Linear.V3
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH:Control.Monad.Primitive
                         profunctors-5.2@profunctors-5.2-LrJGukLpH0xCNgg3bhdC7E:Data.Profunctor.Rep
                         tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt:Data.Tagged
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
                         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Lazy
                         unordered-containers-0.2.7.2@unordered-containers-0.2.7.2-8AmrySQXjRGF6VciYs51fM:Data.HashMap.Base
                         unordered-containers-0.2.7.2@unordered-containers-0.2.7.2-8AmrySQXjRGF6VciYs51fM:Data.HashSet
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Primitive
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Storable
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed.Base
import  -/  base-4.9.1.0:Data.Bits 8dd241433f98eab81ddfb7fcb01616f1
import  -/  base-4.9.1.0:Data.Foldable 254e836c2d813d34e47feb29bb8d40ed
import  -/  base-4.9.1.0:Data.Function e669266e2bc3ac37fceae74061959895
import  -/  base-4.9.1.0:Data.Functor 682cc832c233b71cec70179490a08631
import  -/  base-4.9.1.0:Data.List 7349774f430841349c90dfd1144aea97
import  -/  base-4.9.1.0:Data.Maybe ecf0c6f81372d9b58b142d5e758ea51b
import  -/  base-4.9.1.0:Data.OldList c9282ee91951bdcbd918d2960562c007
import  -/  base-4.9.1.0:Data.Word 6cc02853e8d5a49ad2541ba9733cc40b
import  -/  base-4.9.1.0:Debug.Trace 5d15fa13ecafd28bc71693cbbe158c3e
import  -/  base-4.9.1.0:GHC.Base 4caea1123ecf4b46e27cbccd6d279377
import  -/  base-4.9.1.0:GHC.Err 20faef8829fd13c027d0ee2213637534
import  -/  base-4.9.1.0:GHC.Float b620368aab866c2bb9d3a0a459566b84
import  -/  base-4.9.1.0:GHC.List d11eb227c1c6fbfd89bb781d72eaea0d
import  -/  base-4.9.1.0:GHC.Num 38b8aac8807c096c7f3ca3c1eff02939
import  -/  base-4.9.1.0:GHC.Real b88ae4a48c079652623073a5bbf5c9b0
import  -/  base-4.9.1.0:GHC.Show eca5834daba3b6a2bbbe64ab52056707
import  -/  base-4.9.1.0:Prelude 74b3e204395920329f6de9d97206abe9
import  -/  bmp-1.2.6.3@bmp-1.2.6.3-43OLkH0uuwm831pBFpx2PZ:Codec.BMP f253e1e3362fb0895097753fdd868c2d
import  -/  bmp-1.2.6.3@bmp-1.2.6.3-43OLkH0uuwm831pBFpx2PZ:Codec.BMP.Pack d018f6b73ce19992cca07fa6277f2b62
import  -/  bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString d0429fd72d8924fe9c02ccbe4235f334
import  -/  bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Internal f93c775d03517ec3bd95675a19a7df57
import  -/  ghc-prim-0.5.0.0:GHC.Classes 16d48e012d23eaef9bca91ccdd572c02
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  linear-1.20.5@linear-1.20.5-CEAsJizrl7jL0iAxtpGqYP:Linear.V3 2c30ff802e0fec4e882aac9ad5111240
import  -/  linear-1.20.5@linear-1.20.5-CEAsJizrl7jL0iAxtpGqYP:Linear.Vector f2485f629461d2d28b58432bd5ddf98f
import  -/  matrix-0.3.5.0@matrix-0.3.5.0-eFZR6K8Lax4OrNeuTQF4y:Data.Matrix 2de8b1528e8778fd4bf7452f8e58a0dc
import  -/  random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog:System.Random 4c90117f915e12291e0c5f588320bf66
ba3906bd63b19ef169c60f1d8e216ff5
  $fFunctorRGB :: GHC.Base.Functor Lib.RGB
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lib.RGB Lib.$fFunctorRGB_$cfmap Lib.$fFunctorRGB_$c<$ -}
ba3906bd63b19ef169c60f1d8e216ff5
  $fFunctorRGB_$c<$ :: a -> Lib.RGB b -> Lib.RGB a
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*H>m,
     Unfolding: InlineRule (2, True, False)
                (\ @ a1 @ b1 (eta :: a1) (eta1 :: Lib.RGB b1) ->
                 case eta1 of wild { Lib.RGB r g b2 ->
                 Lib.RGB @ a1 eta eta eta }) -}
ba3906bd63b19ef169c60f1d8e216ff5
  $fFunctorRGB_$cfmap :: (a -> b) -> Lib.RGB a -> Lib.RGB b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><S,1*U(U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ @ a1 @ b1 (f :: a1 -> b1) (ds1 :: Lib.RGB a1) ->
                 case ds1 of wild { Lib.RGB r g b2 ->
                 Lib.RGB @ b1 (f r) (f g) (f b2) }) -}
8d562f079eacf332c639e962684417a8
  $fShowLight :: GHC.Show.Show Lib.Light
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lib.Light
                  Lib.$fShowLight_$cshowsPrec
                  Lib.$fShowLight_$cshow
                  Lib.$fShowLight_$cshowList -}
8d562f079eacf332c639e962684417a8
  $fShowLight1 :: Lib.Light -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ (w :: Lib.Light) ->
                 case w of ww { Lib.Light ww1 ww2 ->
                 Lib.$w$cshowsPrec 0# ww1 ww2 }) -}
6c9ac98fdfd50f75ca43adf871e729f0
  $fShowLight2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Light {"#) -}
cde17c67ea806dab4fd5900aef914f3e
  $fShowLight3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "}"#) -}
438420b58f1f7b7c609ba2d30e0d9310
  $fShowLight4 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# ' '#) -}
1223198537f00e937d0d46bf081c08cf
  $fShowLight5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "RGB"#) -}
96c81f21c686953095c29553f147460c
  $fShowLight6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "lightColor = "#) -}
fff2a5f9841627cdc5ae9f58cd06a225
  $fShowLight7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ", "#) -}
96f4a417be9f4c1dd092d641d9f8d0d5
  $fShowLight8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "lightVert = "#) -}
8d562f079eacf332c639e962684417a8
  $fShowLight_$cshow :: Lib.Light -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U(U,U,U),U(U(U),U(U),U(U)))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x1 :: Lib.Light) ->
                 Lib.$fShowLight_$cshowsPrec
                   GHC.Show.shows22
                   x1
                   (GHC.Types.[] @ GHC.Types.Char)) -}
8d562f079eacf332c639e962684417a8
  $fShowLight_$cshowList :: [Lib.Light] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__ @ Lib.Light Lib.$fShowLight1) -}
8d562f079eacf332c639e962684417a8
  $fShowLight_$cshowsPrec ::
    GHC.Types.Int -> Lib.Light -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S(S),1*U(U)><S,1*U(1*U(U,U,U),U(U(U),U(U),U(U)))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Lib.Light) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Lib.Light ww3 ww4 ->
                 Lib.$w$cshowsPrec ww1 ww3 ww4 } }) -}
ba3906bd63b19ef169c60f1d8e216ff5
  $fShowRGB :: GHC.Show.Show a => GHC.Show.Show (Lib.RGB a)
  DFunId
  {- Arity: 1, Strictness: <L,U(A,C(U),A)>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ a1 ($dShow :: GHC.Show.Show a1).
                  @ (Lib.RGB a1)
                  (Lib.$fShowRGB_$cshowsPrec @ a1 $dShow)
                  (Lib.$fShowRGB_$cshow @ a1 $dShow)
                  (Lib.$fShowRGB_$cshowList @ a1 $dShow) -}
ba3906bd63b19ef169c60f1d8e216ff5
  $fShowRGB_$cshow :: GHC.Show.Show a => Lib.RGB a -> GHC.Base.String
  {- Arity: 2, Strictness: <L,U(A,C(U),A)><S,1*U(U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a1 (w :: GHC.Show.Show a1) (w1 :: Lib.RGB a1) ->
                 case w1 of ww { Lib.RGB ww1 ww2 ww3 ->
                 Lib.$w$cshow @ a1 w ww1 ww2 ww3 }) -}
ba3906bd63b19ef169c60f1d8e216ff5
  $fShowRGB_$cshowList ::
    GHC.Show.Show a => [Lib.RGB a] -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,U(A,C(U),A)><S,1*U><L,U>,
     Unfolding: (\ @ a1
                   ($dShow :: GHC.Show.Show a1)
                   (ls :: [Lib.RGB a1])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (Lib.RGB a1)
                   (\ (x1 :: Lib.RGB a1) (s1 :: GHC.Base.String)[OneShot] ->
                    case x1 of ww { Lib.RGB ww1 ww2 ww3 ->
                    GHC.Base.++
                      @ GHC.Types.Char
                      (Lib.$w$cshow @ a1 $dShow ww1 ww2 ww3)
                      s1 })
                   ls
                   s) -}
ba3906bd63b19ef169c60f1d8e216ff5
  $fShowRGB_$cshowsPrec ::
    GHC.Show.Show a => GHC.Types.Int -> Lib.RGB a -> GHC.Show.ShowS
  {- Arity: 4, Strictness: <L,U(A,C(U),A)><L,A><S,1*U(U,U,U)><L,1*U>,
     Unfolding: InlineRule (4, True, False)
                (\ @ a1
                   ($dShow :: GHC.Show.Show a1)
                   (ds1 :: GHC.Types.Int)
                   (x1 :: Lib.RGB a1)
                   (s :: GHC.Base.String) ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b1
                      (c1 :: GHC.Types.Char -> b1 -> b1)[OneShot]
                      (n :: b1)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Char
                      @ b1
                      c1
                      n
                      (Lib.$fShowRGB_$cshow @ a1 $dShow x1))
                   s) -}
7185de6f93c61f42e70df0472f3fbc46
  $fShowRay :: GHC.Show.Show Lib.Ray
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lib.Ray
                  Lib.$fShowRay_$cshowsPrec
                  Lib.$fShowRay_$cshow
                  Lib.$fShowRay_$cshowList -}
7185de6f93c61f42e70df0472f3fbc46
  $fShowRay1 :: Lib.Ray -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ (w :: Lib.Ray) ->
                 case w of ww { Lib.Ray ww1 ww2 ww3 ->
                 Lib.$w$cshowsPrec1 0# ww1 ww2 ww3 }) -}
c117c4c9beb76fcc1cdda772e1459b4a
  $fShowRay2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "bounces = "#) -}
f571d4c2797ad4b5a3a0b01e438b2dc8
  $fShowRay3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "direction = "#) -}
9d09fa3bc6de087faac3ee59b724a708
  $fShowRay4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "vertex = "#) -}
c5d5babe8b13baf61b8226b25eb77fa9
  $fShowRay5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Ray {"#) -}
7185de6f93c61f42e70df0472f3fbc46
  $fShowRay_$cshow :: Lib.Ray -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U(U,U,U),1*U(U,U,U),U(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x1 :: Lib.Ray) ->
                 Lib.$fShowRay_$cshowsPrec
                   GHC.Show.shows22
                   x1
                   (GHC.Types.[] @ GHC.Types.Char)) -}
7185de6f93c61f42e70df0472f3fbc46
  $fShowRay_$cshowList :: [Lib.Ray] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__ @ Lib.Ray Lib.$fShowRay1) -}
7185de6f93c61f42e70df0472f3fbc46
  $fShowRay_$cshowsPrec :: GHC.Types.Int -> Lib.Ray -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S(S),1*U(U)><S,1*U(1*U(U,U,U),1*U(U,U,U),U(U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Lib.Ray) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Lib.Ray ww3 ww4 ww5 ->
                 Lib.$w$cshowsPrec1 ww1 ww3 ww4 ww5 } }) -}
ac0e4badbfc91c1721348eabd6bbbb43
  $fShowTriangle :: GHC.Show.Show Lib.Triangle
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lib.Triangle
                  Lib.$fShowTriangle_$cshowsPrec
                  Lib.$fShowTriangle_$cshow
                  Lib.$fShowTriangle_$cshowList -}
ac0e4badbfc91c1721348eabd6bbbb43
  $fShowTriangle1 :: Lib.Triangle -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ (w :: Lib.Triangle) ->
                 case w of ww { Lib.Triangle ww1 ww2 ww3 ww4 ->
                 Lib.$w$cshowsPrec2 0# ww1 ww2 ww3 ww4 }) -}
7c4e2706108c56cceab2cf68635673fe
  $fShowTriangle2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Triangle {"#) -}
d112f5ae46d9388b261ff30e25b63e19
  $fShowTriangle3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "color = "#) -}
3a9b3391f73ac251bc402c4431623ca1
  $fShowTriangle4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "c = "#) -}
e1c499dd52e9d46cb20bff481e292cab
  $fShowTriangle5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "b = "#) -}
a41d43bf6197a9fd66fd3673ff453765
  $fShowTriangle6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "a = "#) -}
ac0e4badbfc91c1721348eabd6bbbb43
  $fShowTriangle_$cshow :: Lib.Triangle -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(1*U(U,U,U),1*U(U,U,U),1*U(U,U,U),U(U(U),U(U),U(U)))>,
     Unfolding: InlineRule (1, True, False)
                (\ (x1 :: Lib.Triangle) ->
                 Lib.$fShowTriangle_$cshowsPrec
                   GHC.Show.shows22
                   x1
                   (GHC.Types.[] @ GHC.Types.Char)) -}
ac0e4badbfc91c1721348eabd6bbbb43
  $fShowTriangle_$cshowList :: [Lib.Triangle] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Lib.Triangle
                   Lib.$fShowTriangle1) -}
ac0e4badbfc91c1721348eabd6bbbb43
  $fShowTriangle_$cshowsPrec ::
    GHC.Types.Int -> Lib.Triangle -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <S(S),1*U(U)><S,1*U(1*U(U,U,U),1*U(U,U,U),1*U(U,U,U),U(U(U),U(U),U(U)))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Lib.Triangle) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Lib.Triangle ww3 ww4 ww5 ww6 ->
                 Lib.$w$cshowsPrec2 ww1 ww3 ww4 ww5 ww6 } }) -}
08adf93521595a8c14ae73c317f40ed7
  $s!_$slength :: Data.Vector.Vector GHC.Types.Float -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,U,A)>m,
     Inline: [NEVER] -}
4da0e53029c12371016d3f05056416fb
  $tc'Light :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1244358681582409198##
                   6194567361612994705##
                   Lib.$trModule
                   Lib.$tc'Light1) -}
4ceb83915e5846cdc4252714ed1b8110
  $tc'Light1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Light"#) -}
68fabab5fcb4f0cdc7fb29de1f595ebb
  $tc'RGB :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11466041634694003982##
                   228763357468072060##
                   Lib.$trModule
                   Lib.$tc'RGB1) -}
82b370033c9b6a1b554a609fc7ab8339
  $tc'RGB1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'RGB"#) -}
d112fd25128072405eb2af2a749186a3
  $tc'Ray :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5139667293988020904##
                   17751351827247812118##
                   Lib.$trModule
                   Lib.$tc'Ray1) -}
5cf5654fbfa46780362c4e0f3beb6d3c
  $tc'Ray1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Ray"#) -}
cb86d85d8d582359786be4d65b4b6e15
  $tc'Scene :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16780593898376462182##
                   10934450843780855586##
                   Lib.$trModule
                   Lib.$tc'Scene1) -}
491f46cde996c377165ed306c895e1b7
  $tc'Scene1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Scene"#) -}
d8c1ec7a913732ab88c2f28da9538bd5
  $tc'Trace :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15239349013453040185##
                   13784096142297476920##
                   Lib.$trModule
                   Lib.$tc'Trace1) -}
5d1a108b4153a9ed6b18c776b6e82c99
  $tc'Trace1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Trace"#) -}
d74b4a46efb4b9f80158fea9869a0515
  $tc'Triangle :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   804081144431393569##
                   12908424321893778067##
                   Lib.$trModule
                   Lib.$tc'Triangle1) -}
1d13a665cbdf93a834aca045257132a0
  $tc'Triangle1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Triangle"#) -}
5f068c75e52cd1a20bfd42602084438e
  $tcLight :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5557095560754930015##
                   649292492599454166##
                   Lib.$trModule
                   Lib.$tcLight1) -}
12fad192046f188937971edd4c3a624f
  $tcLight1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Light"#) -}
9cd4b3b388e80a9e0007b0625cad673e
  $tcRGB :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17982719890474409103##
                   13410364644284762943##
                   Lib.$trModule
                   Lib.$tcRGB1) -}
89b3e38b5e78c3b9bcfe30f51ad693e4
  $tcRGB1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "RGB"#) -}
b87d93ebebe44ea8885928666383b059
  $tcRay :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9378833839426883002##
                   630707887492202739##
                   Lib.$trModule
                   Lib.$tcRay1) -}
f70aecedb1b260485c7448ee9b7efe6f
  $tcRay1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Ray"#) -}
c07c2318030cc9060503c8e1a5b3e4f5
  $tcScene :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5058560760149974856##
                   14892272405230383483##
                   Lib.$trModule
                   Lib.$tcScene1) -}
4759c563ceb8e022b3763963124330a1
  $tcScene1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Scene"#) -}
0e356a1676939dbc83879527306916d3
  $tcTraceData :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6373215719043863117##
                   2656262513878005218##
                   Lib.$trModule
                   Lib.$tcTraceData1) -}
439ceefbf70d2ea62b061c93d6dda2db
  $tcTraceData1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "TraceData"#) -}
2d8442ef95e0344c22e74a85fe194d57
  $tcTriangle :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13244850499882248141##
                   13884151698779861246##
                   Lib.$trModule
                   Lib.$tcTriangle1) -}
5d6b58177144f346ed28a8f6b0fa13bf
  $tcTriangle1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Triangle"#) -}
15a9db80874e946fdcca36a2fa18c69c
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Lib.$trModule2 Lib.$trModule1) -}
48123c83398116fc728a77a0c5bb83a9
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Lib"#) -}
a60a56ae94f005cfe85d07ec10b884c1
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "raytrace-0.1.0.0-LqVbAl3QgT32j0Uy1FQn8n"#) -}
44a6ed9e4658d91fdc6a8b7246b2af40
  $w$cshow :: GHC.Show.Show a => a -> a -> a -> GHC.Base.String
  {- Arity: 4, Strictness: <L,U(A,C(U),A)><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ a1
                   (w :: GHC.Show.Show a1)
                   (ww :: a1)
                   (ww1 :: a1)
                   (ww2 :: a1) ->
                 GHC.Base.++
                   @ GHC.Types.Char
                   Lib.$fShowLight5
                   (GHC.Types.:
                      @ GHC.Types.Char
                      Lib.$fShowLight4
                      (GHC.Base.++
                         @ GHC.Types.Char
                         (GHC.Show.show @ a1 w ww)
                         (GHC.Types.:
                            @ GHC.Types.Char
                            Lib.$fShowLight4
                            (GHC.Base.++
                               @ GHC.Types.Char
                               (GHC.Show.show @ a1 w ww1)
                               (GHC.Types.:
                                  @ GHC.Types.Char
                                  Lib.$fShowLight4
                                  (GHC.Base.++
                                     @ GHC.Types.Char
                                     (GHC.Show.show @ a1 w ww2)
                                     (GHC.Types.[] @ GHC.Types.Char)))))))) -}
79e630558554614c21b97c16a9111018
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> Linear.V3.V3 GHC.Types.Float
    -> Lib.RGB GHC.Types.Float
    -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S,U><L,1*U(U,U,U)><L,U(U(U),U(U),U(U))>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: Linear.V3.V3 GHC.Types.Float)
                   (ww2 :: Lib.RGB GHC.Types.Float) ->
                 let {
                   f :: GHC.Base.String -> GHC.Base.String
                   = case ww1 of ww3 { Linear.V3.V3 ww4 ww5 ww6 ->
                     Linear.V3.$w$cshowsPrec
                       @ GHC.Types.Float
                       GHC.Float.$fShowFloat
                       0#
                       ww4
                       ww5
                       ww6 }
                 } in
                 let {
                   g :: GHC.Base.String -> GHC.Base.String
                     {- Arity: 1, Strictness: <L,1*U> -}
                   = \ (x1 :: GHC.Base.String) ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       Lib.$fShowLight8
                       (f (GHC.Base.++
                             @ GHC.Types.Char
                             Lib.$fShowLight7
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Lib.$fShowLight6
                                (case ww2 of ww3 { Lib.RGB ww4 ww5 ww6 ->
                                 GHC.Base.++
                                   @ GHC.Types.Char
                                   (Lib.$w$s$cshow ww4 ww5 ww6)
                                   (GHC.Base.++ @ GHC.Types.Char Lib.$fShowLight3 x1) }))))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False
                   -> \ (x1 :: GHC.Base.String) ->
                      GHC.Base.++ @ GHC.Types.Char Lib.$fShowLight2 (g x1)
                   GHC.Types.True
                   -> \ (x1 :: GHC.Base.String) ->
                      GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows7
                        (GHC.Base.++
                           @ GHC.Types.Char
                           Lib.$fShowLight2
                           (g (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 x1))) }) -}
6b64dac41d58fd32c66dc937587bb94d
  $w$cshowsPrec1 ::
    GHC.Prim.Int#
    -> Linear.V3.V3 GHC.Types.Float
    -> Linear.V3.V3 GHC.Types.Float
    -> GHC.Types.Int
    -> GHC.Show.ShowS
  {- Arity: 4, Strictness: <S,U><L,1*U(U,U,U)><L,1*U(U,U,U)><L,U(U)>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: Linear.V3.V3 GHC.Types.Float)
                   (ww2 :: Linear.V3.V3 GHC.Types.Float)
                   (ww3 :: GHC.Types.Int) ->
                 let {
                   f :: GHC.Base.String -> GHC.Base.String
                   = case ww1 of ww4 { Linear.V3.V3 ww5 ww6 ww7 ->
                     Linear.V3.$w$cshowsPrec
                       @ GHC.Types.Float
                       GHC.Float.$fShowFloat
                       0#
                       ww5
                       ww6
                       ww7 }
                 } in
                 let {
                   f1 :: GHC.Base.String -> GHC.Base.String
                   = case ww2 of ww4 { Linear.V3.V3 ww5 ww6 ww7 ->
                     Linear.V3.$w$cshowsPrec
                       @ GHC.Types.Float
                       GHC.Float.$fShowFloat
                       0#
                       ww5
                       ww6
                       ww7 }
                 } in
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                   = \ (x1 :: GHC.Base.String) ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       Lib.$fShowRay5
                       (GHC.Base.++
                          @ GHC.Types.Char
                          Lib.$fShowRay4
                          (f (GHC.Base.++
                                @ GHC.Types.Char
                                Lib.$fShowLight7
                                (GHC.Base.++
                                   @ GHC.Types.Char
                                   Lib.$fShowRay3
                                   (f1
                                      (GHC.Base.++
                                         @ GHC.Types.Char
                                         Lib.$fShowLight7
                                         (GHC.Base.++
                                            @ GHC.Types.Char
                                            Lib.$fShowRay2
                                            (case ww3 of ww4 { GHC.Types.I# ww5 ->
                                             case GHC.Show.$wshowSignedInt
                                                    0#
                                                    ww5
                                                    (GHC.Base.++
                                                       @ GHC.Types.Char
                                                       Lib.$fShowLight3
                                                       x1) of ww6 { (#,#) ww7 ww8 ->
                                             GHC.Types.: @ GHC.Types.Char ww7 ww8 } }))))))))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False -> p
                   GHC.Types.True
                   -> \ (x1 :: GHC.Base.String) ->
                      GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows7
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 x1)) }) -}
1378da878fcb9dc2f9a0d6936ba8d81b
  $w$cshowsPrec2 ::
    GHC.Prim.Int#
    -> Linear.V3.V3 GHC.Types.Float
    -> Linear.V3.V3 GHC.Types.Float
    -> Linear.V3.V3 GHC.Types.Float
    -> Lib.RGB GHC.Types.Float
    -> GHC.Show.ShowS
  {- Arity: 5,
     Strictness: <S,U><L,1*U(U,U,U)><L,1*U(U,U,U)><L,1*U(U,U,U)><L,U(U(U),U(U),U(U))>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: Linear.V3.V3 GHC.Types.Float)
                   (ww2 :: Linear.V3.V3 GHC.Types.Float)
                   (ww3 :: Linear.V3.V3 GHC.Types.Float)
                   (ww4 :: Lib.RGB GHC.Types.Float) ->
                 let {
                   f :: GHC.Base.String -> GHC.Base.String
                   = case ww1 of ww5 { Linear.V3.V3 ww6 ww7 ww8 ->
                     Linear.V3.$w$cshowsPrec
                       @ GHC.Types.Float
                       GHC.Float.$fShowFloat
                       0#
                       ww6
                       ww7
                       ww8 }
                 } in
                 let {
                   f1 :: GHC.Base.String -> GHC.Base.String
                   = case ww2 of ww5 { Linear.V3.V3 ww6 ww7 ww8 ->
                     Linear.V3.$w$cshowsPrec
                       @ GHC.Types.Float
                       GHC.Float.$fShowFloat
                       0#
                       ww6
                       ww7
                       ww8 }
                 } in
                 let {
                   f2 :: GHC.Base.String -> GHC.Base.String
                   = case ww3 of ww5 { Linear.V3.V3 ww6 ww7 ww8 ->
                     Linear.V3.$w$cshowsPrec
                       @ GHC.Types.Float
                       GHC.Float.$fShowFloat
                       0#
                       ww6
                       ww7
                       ww8 }
                 } in
                 let {
                   g :: GHC.Base.String -> GHC.Base.String
                     {- Arity: 1, Strictness: <L,1*U> -}
                   = \ (x1 :: GHC.Base.String) ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       Lib.$fShowTriangle6
                       (f (GHC.Base.++
                             @ GHC.Types.Char
                             Lib.$fShowLight7
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Lib.$fShowTriangle5
                                (f1
                                   (GHC.Base.++
                                      @ GHC.Types.Char
                                      Lib.$fShowLight7
                                      (GHC.Base.++
                                         @ GHC.Types.Char
                                         Lib.$fShowTriangle4
                                         (f2
                                            (GHC.Base.++
                                               @ GHC.Types.Char
                                               Lib.$fShowLight7
                                               (GHC.Base.++
                                                  @ GHC.Types.Char
                                                  Lib.$fShowTriangle3
                                                  (case ww4 of ww5 { Lib.RGB ww6 ww7 ww8 ->
                                                   GHC.Base.++
                                                     @ GHC.Types.Char
                                                     (Lib.$w$s$cshow ww6 ww7 ww8)
                                                     (GHC.Base.++
                                                        @ GHC.Types.Char
                                                        Lib.$fShowLight3
                                                        x1) }))))))))))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False
                   -> \ (x1 :: GHC.Base.String) ->
                      GHC.Base.++ @ GHC.Types.Char Lib.$fShowTriangle2 (g x1)
                   GHC.Types.True
                   -> \ (x1 :: GHC.Base.String) ->
                      GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows7
                        (GHC.Base.++
                           @ GHC.Types.Char
                           Lib.$fShowTriangle2
                           (g (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 x1))) }) -}
40cf102e33528510c8c5e21c3d8a397f
  $w$s$cshow ::
    GHC.Types.Float
    -> GHC.Types.Float -> GHC.Types.Float -> GHC.Base.String
  {- Arity: 3, Strictness: <L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Types.Float)
                   (ww1 :: GHC.Types.Float)
                   (ww2 :: GHC.Types.Float) ->
                 GHC.Base.++
                   @ GHC.Types.Char
                   Lib.$fShowLight5
                   (GHC.Types.:
                      @ GHC.Types.Char
                      Lib.$fShowLight4
                      (case ww of ww3 { GHC.Types.F# ww4 ->
                       GHC.Base.++
                         @ GHC.Types.Char
                         (GHC.Float.$w$sshowSignedFloat1
                            GHC.Float.$fShowFloat_$sshowFloat
                            GHC.Show.shows22
                            ww4
                            (GHC.Types.[] @ GHC.Types.Char))
                         (GHC.Types.:
                            @ GHC.Types.Char
                            Lib.$fShowLight4
                            (case ww1 of ww5 { GHC.Types.F# ww6 ->
                             GHC.Base.++
                               @ GHC.Types.Char
                               (GHC.Float.$w$sshowSignedFloat1
                                  GHC.Float.$fShowFloat_$sshowFloat
                                  GHC.Show.shows22
                                  ww6
                                  (GHC.Types.[] @ GHC.Types.Char))
                               (GHC.Types.:
                                  @ GHC.Types.Char
                                  Lib.$fShowLight4
                                  (case ww2 of ww7 { GHC.Types.F# ww8 ->
                                   GHC.Base.++
                                     @ GHC.Types.Char
                                     (GHC.Float.$w$sshowSignedFloat1
                                        GHC.Float.$fShowFloat_$sshowFloat
                                        GHC.Show.shows22
                                        ww8
                                        (GHC.Types.[] @ GHC.Types.Char))
                                     (GHC.Types.[] @ GHC.Types.Char) })) })) }))) -}
80a23a548766034b3d638e8c593f17f4
  $wc ::
    GHC.Types.Float
    -> GHC.Types.Float
    -> GHC.Types.Float
    -> (# GHC.Types.Float, GHC.Types.Float, GHC.Types.Float #)
  {- Arity: 3, Strictness: <S,U><S,U><S,U>, Inline: [0] -}
b0766b5f46ebc7de9b6c41ddb965351f
  type Camera = GHC.Types.Float
e23433b1b52e9a33a0b485cdd7904e84
  type ImageBuffer = Data.ByteString.Internal.ByteString
8d562f079eacf332c639e962684417a8
  data Light
    = Light {lightVert :: Linear.V3.V3 GHC.Types.Float,
             lightColor :: Lib.RGB GHC.Types.Float}
ba3906bd63b19ef169c60f1d8e216ff5
  data RGB a = RGB a a a
7185de6f93c61f42e70df0472f3fbc46
  data Ray
    = Ray {vertex :: Linear.V3.V3 GHC.Types.Float,
           direction :: Linear.V3.V3 GHC.Types.Float,
           bounces :: GHC.Types.Int}
e2b7fb93c105a0a6e78eb27c4525b718
  data Scene = Scene {tris :: [Lib.Triangle], lights :: [Lib.Light]}
7513cadc8e3e6c111799634e72d36a6c
  data TraceData
    = Trace {intersectPoint :: Linear.V3.V3 GHC.Types.Float,
             dist :: GHC.Types.Float,
             col :: Lib.RGB GHC.Types.Float,
             surfNorm :: Linear.V3.V3 GHC.Types.Float}
ac0e4badbfc91c1721348eabd6bbbb43
  data Triangle
    = Triangle {a :: Linear.V3.V3 GHC.Types.Float,
                b :: Linear.V3.V3 GHC.Types.Float,
                c :: Linear.V3.V3 GHC.Types.Float,
                color :: Lib.RGB GHC.Types.Float}
effeaa4051e5d79b119498efd53c9247
  a :: Lib.Triangle -> Linear.V3.V3 GHC.Types.Float
  RecSel Left Lib.Triangle
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(1*U(U,U,U),A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: Lib.Triangle) ->
                 case ds1 of wild { Lib.Triangle ds2 ds3 ds4 ds5 -> ds2 }) -}
e9aef9e7cafbb1c65d4850a0d56cc38d
  b :: Lib.Triangle -> Linear.V3.V3 GHC.Types.Float
  RecSel Left Lib.Triangle
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLL),1*U(A,1*U(U,U,U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: Lib.Triangle) ->
                 case ds1 of wild { Lib.Triangle ds2 ds3 ds4 ds5 -> ds3 }) -}
cad9a8f5df8b9bf295f138da18efc1c1
  bounces :: Lib.Ray -> GHC.Types.Int
  RecSel Left Lib.Ray
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,1*U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: Lib.Ray) ->
                 case ds1 of wild { Lib.Ray ds2 ds3 ds4 -> ds4 }) -}
dedc30853bce42fb856c36bfc63ebf94
  c :: Lib.Triangle -> Linear.V3.V3 GHC.Types.Float
  RecSel Left Lib.Triangle
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSL),1*U(A,A,1*U(U,U,U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: Lib.Triangle) ->
                 case ds1 of wild { Lib.Triangle ds2 ds3 ds4 ds5 -> ds4 }) -}
d0036461bb47c2a4d140c2b3d55fa248
  col :: Lib.TraceData -> Lib.RGB GHC.Types.Float
  RecSel Left Lib.TraceData
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSL),1*U(A,A,1*U(U,U,U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: Lib.TraceData) ->
                 case ds1 of wild { Lib.Trace ds2 ds3 ds4 ds5 -> ds4 }) -}
9ba06d10568bc6e128557723055f6e46
  color :: Lib.Triangle -> Lib.RGB GHC.Types.Float
  RecSel Left Lib.Triangle
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLS),1*U(A,A,A,1*U(U,U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: Lib.Triangle) ->
                 case ds1 of wild { Lib.Triangle ds2 ds3 ds4 ds5 -> ds5 }) -}
b4edfb10babce9ec394589026f5dd209
  direction :: Lib.Ray -> Linear.V3.V3 GHC.Types.Float
  RecSel Left Lib.Ray
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSL),1*U(A,1*U(U,U,U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: Lib.Ray) ->
                 case ds1 of wild { Lib.Ray ds2 ds3 ds4 -> ds3 }) -}
6d09937279a91a15e09b6598d76c0079
  dist :: Lib.TraceData -> GHC.Types.Float
  RecSel Left Lib.TraceData
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLL),1*U(A,1*U(U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: Lib.TraceData) ->
                 case ds1 of wild { Lib.Trace ds2 ds3 ds4 ds5 -> ds3 }) -}
aeb583797c920f156c478649c1a172b7
  intersectPoint :: Lib.TraceData -> Linear.V3.V3 GHC.Types.Float
  RecSel Left Lib.TraceData
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLL),1*U(1*U(U,U,U),A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: Lib.TraceData) ->
                 case ds1 of wild { Lib.Trace ds2 ds3 ds4 ds5 -> ds2 }) -}
7c6b9987079cbdff51ed4a986ff23328
  lightColor :: Lib.Light -> Lib.RGB GHC.Types.Float
  RecSel Left Lib.Light
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U(U,U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: Lib.Light) ->
                 case ds1 of wild { Lib.Light ds2 ds3 -> ds3 }) -}
393e40aff659f7eb077df4d3e2e1f1c4
  lightVert :: Lib.Light -> Linear.V3.V3 GHC.Types.Float
  RecSel Left Lib.Light
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U(U,U,U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: Lib.Light) ->
                 case ds1 of wild { Lib.Light ds2 ds3 -> ds2 }) -}
ce01641a007b9c362b2c5533bc58e39b
  lights :: Lib.Scene -> [Lib.Light]
  RecSel Left Lib.Scene
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: Lib.Scene) ->
                 case ds1 of wild { Lib.Scene ds2 ds3 -> ds3 }) -}
f22fd78d4ad303a1c0b2776187120220
  lime :: Lib.RGB GHC.Types.Float
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Lib.RGB
                   @ GHC.Types.Float
                   Lib.testScene30
                   Lib.testScene20
                   Lib.testScene7) -}
49b9d3b24bcd0101968a4e8bd57ae7a0
  render ::
    Lib.Camera
    -> Lib.Scene
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Base.Maybe GHC.Base.String
    -> GHC.Types.IO ()
  {- Arity: 6,
     Strictness: <L,U(U)><L,U(U,A)><L,U(U)><L,U(U)><L,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.render1
                  `cast`
                (<Lib.Camera>_R
                 ->_R <Lib.Scene>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R <GHC.Base.Maybe GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
ec2d0890e00e088071c70bc424eff8eb
  render1 ::
    Lib.Camera
    -> Lib.Scene
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Base.Maybe GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 6,
     Strictness: <L,U(U)><L,U(U,A)><L,U(U)><L,U(U)><L,1*U><S,U> -}
0b5e2708e7004c967dcac92f9f4258eb
  surfNorm :: Lib.TraceData -> Linear.V3.V3 GHC.Types.Float
  RecSel Left Lib.TraceData
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLS),1*U(A,A,A,1*U(U,U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: Lib.TraceData) ->
                 case ds1 of wild { Lib.Trace ds2 ds3 ds4 ds5 -> ds5 }) -}
5d85ff4bd0e62aa6626041169cf7ba8e
  testScene :: Lib.Scene
  {- Strictness: m,
     Unfolding: (Lib.Scene Lib.testScene8 Lib.testScene1) -}
53e540e5e17386fdb0e26ec827607ef1
  testScene1 :: [Lib.Light]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lib.Light
                   Lib.testScene2
                   (GHC.Types.[] @ Lib.Light)) -}
c8d65d0031016794328c41a3480fb088
  testScene10 :: [Lib.Triangle]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lib.Triangle
                   Lib.testScene47
                   Lib.testScene11) -}
90e07ec63ee0a11b5e4bb944cce77e23
  testScene11 :: [Lib.Triangle]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lib.Triangle
                   Lib.testScene46
                   Lib.testScene12) -}
77f445c6f9b18be7d8f66dbf871f9cad
  testScene12 :: [Lib.Triangle]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lib.Triangle
                   Lib.testScene45
                   Lib.testScene13) -}
3a116c4df043b78fd95b3c3ac7bfc25e
  testScene13 :: [Lib.Triangle]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lib.Triangle
                   Lib.testScene44
                   Lib.testScene14) -}
59547308bfe7efddb51b70f8fbf5eed4
  testScene14 :: [Lib.Triangle]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lib.Triangle
                   Lib.testScene43
                   Lib.testScene15) -}
e5819d8d01db26597cbe98830cc51140
  testScene15 :: [Lib.Triangle]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lib.Triangle
                   Lib.testScene29
                   Lib.testScene16) -}
730385875a24e5d02ea4b24f0f7c9ebc
  testScene16 :: [Lib.Triangle]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lib.Triangle
                   Lib.testScene27
                   Lib.testScene17) -}
0f0d744d70810a151f9ee788e38df494
  testScene17 :: [Lib.Triangle]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lib.Triangle
                   Lib.testScene18
                   (GHC.Types.[] @ Lib.Triangle)) -}
1295594c6c5e1fcfe5588522b09187cf
  testScene18 :: Lib.Triangle
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Lib.Triangle
                   Lib.testScene26
                   Lib.testScene23
                   Lib.testScene21
                   Lib.testScene19) -}
7891d4d3a66f91f8a546ad4c8b8a1665
  testScene19 :: Lib.RGB GHC.Types.Float
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Lib.RGB
                   @ GHC.Types.Float
                   Lib.testScene20
                   Lib.testScene20
                   Lib.testScene20) -}
5a8a78b882696eaf1a17d5e705124722
  testScene2 :: Lib.Light
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Lib.Light Lib.testScene5 Lib.testScene3) -}
69069b06f54bd9c703cad0e5823d730c
  testScene20 :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# 1.0#) -}
87da547079dee6c775fe9b1a02d541ca
  testScene21 :: Linear.V3.V3 GHC.Types.Float
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Linear.V3.V3
                   @ GHC.Types.Float
                   Lib.testScene22
                   Lib.testScene7
                   Lib.testScene22) -}
2905e45a4542ce929acfd275511e4550
  testScene22 :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# 10.0#) -}
bf3549af89aa66761fe2ebb4d2de2748
  testScene23 :: Linear.V3.V3 GHC.Types.Float
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Linear.V3.V3
                   @ GHC.Types.Float
                   Lib.testScene22
                   Lib.testScene25
                   Lib.testScene24) -}
811851ccdf390b25842d9dd07408ef5f
  testScene24 :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# -2.0#) -}
75d51231832dcfb5252d97e3a9d71e0a
  testScene25 :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# -10.0#) -}
6f6f8f2078db4055c7f13a05995fe6d2
  testScene26 :: Linear.V3.V3 GHC.Types.Float
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Linear.V3.V3
                   @ GHC.Types.Float
                   Lib.testScene22
                   Lib.testScene22
                   Lib.testScene24) -}
0b220415e56e6db86e2932f11da0c664
  testScene27 :: Lib.Triangle
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Lib.Triangle
                   Lib.testScene26
                   Lib.testScene23
                   Lib.testScene28
                   Lib.testScene19) -}
3605e52f8517c720d251c8665fd2a8f8
  testScene28 :: Linear.V3.V3 GHC.Types.Float
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Linear.V3.V3
                   @ GHC.Types.Float
                   Lib.testScene25
                   Lib.testScene7
                   Lib.testScene24) -}
9da6498dcf2e73331dca4e89388e55be
  testScene29 :: Lib.Triangle
  {- Strictness: m,
     Unfolding: (Lib.Triangle Lib.v4 Lib.v1 Lib.v6 Lib.lime) -}
6d23a7a952ec4663eac1ed2f31f0b851
  testScene3 :: Lib.RGB GHC.Types.Float
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Lib.RGB
                   @ GHC.Types.Float
                   Lib.testScene4
                   Lib.testScene4
                   Lib.testScene4) -}
0f612202c83e3d6e14b7d03d119c8e27
  testScene30 :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# 0.5#) -}
d173f1e0f2ed94e8ebe2810f474b26eb
  testScene31 :: [Linear.V3.V3 GHC.Types.Float]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Linear.V3.V3 GHC.Types.Float)
                   Lib.testScene41
                   Lib.testScene32) -}
352d033ad7b8d1918a062b2860635b5d
  testScene32 :: [Linear.V3.V3 GHC.Types.Float]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Linear.V3.V3 GHC.Types.Float)
                   Lib.testScene40
                   Lib.testScene33) -}
1806eb5bf8bd3b3284cd5daf28704359
  testScene33 :: [Linear.V3.V3 GHC.Types.Float]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Linear.V3.V3 GHC.Types.Float)
                   Lib.testScene39
                   Lib.testScene34) -}
144151c6635cdc1cd375436b04d0be3f
  testScene34 :: [Linear.V3.V3 GHC.Types.Float]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Linear.V3.V3 GHC.Types.Float)
                   Lib.testScene38
                   Lib.testScene35) -}
80ba1300b86e03a7f583fb1ed6c69746
  testScene35 :: [Linear.V3.V3 GHC.Types.Float]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Linear.V3.V3 GHC.Types.Float)
                   Lib.testScene36
                   (GHC.Types.[] @ (Linear.V3.V3 GHC.Types.Float))) -}
d220e08e787cc704aee2c61975d2297e
  testScene36 :: Linear.V3.V3 GHC.Types.Float
  {- Unfolding: (case Lib.$wc
                        Lib.testScene7
                        Lib.testScene7
                        Lib.testScene37 of ww { (#,,#) ww1 ww2 ww3 ->
                 Linear.V3.V3 @ GHC.Types.Float ww1 ww2 ww3 }) -}
c5613600756988ee3b1cee5ab2aec0c6
  testScene37 :: GHC.Types.Float
  {- HasNoCafRefs, Unfolding: (GHC.Types.F# -1.0#) -}
ce5eb3b88589087b6650bc1939147dfb
  testScene38 :: Linear.V3.V3 GHC.Types.Float
  {- Unfolding: (case Lib.$wc
                        Lib.testScene7
                        Lib.testScene7
                        Lib.testScene20 of ww { (#,,#) ww1 ww2 ww3 ->
                 Linear.V3.V3 @ GHC.Types.Float ww1 ww2 ww3 }) -}
34d2a5008eb321776d0120d8798389dc
  testScene39 :: Linear.V3.V3 GHC.Types.Float
  {- Unfolding: (case Lib.$wc
                        Lib.testScene7
                        Lib.testScene20
                        Lib.testScene7 of ww { (#,,#) ww1 ww2 ww3 ->
                 Linear.V3.V3 @ GHC.Types.Float ww1 ww2 ww3 }) -}
fa3a368bc47c71de69f6411f435352b7
  testScene4 :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# 100.0#) -}
7a96461ca671df8f2d4a26a4416adb2d
  testScene40 :: Linear.V3.V3 GHC.Types.Float
  {- Unfolding: (case Lib.$wc
                        Lib.testScene37
                        Lib.testScene7
                        Lib.testScene7 of ww { (#,,#) ww1 ww2 ww3 ->
                 Linear.V3.V3 @ GHC.Types.Float ww1 ww2 ww3 }) -}
06251de3fb8430f1058afac20cd44101
  testScene41 :: Linear.V3.V3 GHC.Types.Float
  {- Unfolding: (case Lib.$wc
                        Lib.testScene7
                        Lib.testScene37
                        Lib.testScene7 of ww { (#,,#) ww1 ww2 ww3 ->
                 Linear.V3.V3 @ GHC.Types.Float ww1 ww2 ww3 }) -}
d7e6813f0ee215b991f31ffc7bd2c1ab
  testScene42 :: Linear.V3.V3 GHC.Types.Float
  {- Unfolding: (case Lib.$wc
                        Lib.testScene20
                        Lib.testScene7
                        Lib.testScene7 of ww { (#,,#) ww1 ww2 ww3 ->
                 Linear.V3.V3 @ GHC.Types.Float ww1 ww2 ww3 }) -}
1da34deea2323b5d02eb536b71e0440d
  testScene43 :: Lib.Triangle
  {- Strictness: m,
     Unfolding: (Lib.Triangle Lib.v3 Lib.v4 Lib.v6 Lib.lime) -}
68b0c7ef43350fe0c3cde6057b8080d8
  testScene44 :: Lib.Triangle
  {- Strictness: m,
     Unfolding: (Lib.Triangle Lib.v2 Lib.v3 Lib.v6 Lib.lime) -}
0f1b2eab3006dea757344c80f9b2b58f
  testScene45 :: Lib.Triangle
  {- Strictness: m,
     Unfolding: (Lib.Triangle Lib.v1 Lib.v2 Lib.v6 Lib.lime) -}
20965bdb5999ce2c2b79dba808e529e5
  testScene46 :: Lib.Triangle
  {- Strictness: m,
     Unfolding: (Lib.Triangle Lib.v1 Lib.v4 Lib.v5 Lib.lime) -}
dd91530d8eeeb93aaf91a5ea5a157c26
  testScene47 :: Lib.Triangle
  {- Strictness: m,
     Unfolding: (Lib.Triangle Lib.v4 Lib.v3 Lib.v5 Lib.lime) -}
68c6143505cf31d5821e68fb268b2e99
  testScene48 :: Lib.Triangle
  {- Strictness: m,
     Unfolding: (Lib.Triangle Lib.v3 Lib.v2 Lib.v5 Lib.lime) -}
34f85c8c3682b58dc7d395cd13a7e74c
  testScene49 :: Lib.Triangle
  {- Strictness: m,
     Unfolding: (Lib.Triangle Lib.v2 Lib.v1 Lib.v5 Lib.lime) -}
0527986fd0fbdc01b75bceed7ddddb9f
  testScene5 :: Linear.V3.V3 GHC.Types.Float
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Linear.V3.V3
                   @ GHC.Types.Float
                   Lib.testScene7
                   Lib.testScene7
                   Lib.testScene6) -}
8226faad81c721bde89f6a7750b0de1e
  testScene6 :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# 14.0#) -}
8f80c19c82bd5b12635abcf1d3bf7217
  testScene7 :: GHC.Types.Float
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.F# 0.0#) -}
086e3883e27c04531ea54b28ef798ba1
  testScene8 :: [Lib.Triangle]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lib.Triangle
                   Lib.testScene49
                   Lib.testScene9) -}
575cf1caab3da1c3f9652315318d8e93
  testScene9 :: [Lib.Triangle]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lib.Triangle
                   Lib.testScene48
                   Lib.testScene10) -}
a62c8bd954aeb2f7651237cad3d71485
  testSceneVerts :: [Linear.V3.V3 GHC.Types.Float]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Linear.V3.V3 GHC.Types.Float)
                   Lib.testScene42
                   Lib.testScene31) -}
6d168c493bafdf401994a1eb81689ed0
  tris :: Lib.Scene -> [Lib.Triangle]
  RecSel Left Lib.Scene
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: Lib.Scene) ->
                 case ds1 of wild { Lib.Scene ds2 ds3 -> ds2 }) -}
ed07bfccaa8a18f2ca96217c3159968c
  v1 :: Linear.V3.V3 GHC.Types.Float
  {- Unfolding: (GHC.List.$w!!
                   @ (Linear.V3.V3 GHC.Types.Float)
                   Lib.testSceneVerts
                   0#) -}
cf7aef4be95e23cd59ad76dddecfc4bf
  v2 :: Linear.V3.V3 GHC.Types.Float
  {- Unfolding: (GHC.List.$w!!
                   @ (Linear.V3.V3 GHC.Types.Float)
                   Lib.testSceneVerts
                   1#) -}
af96ef22134324beab19151268af37d6
  v3 :: Linear.V3.V3 GHC.Types.Float
  {- Unfolding: (GHC.List.$w!!
                   @ (Linear.V3.V3 GHC.Types.Float)
                   Lib.testSceneVerts
                   2#) -}
75bce28033e9de8812e461ea80082b9b
  v4 :: Linear.V3.V3 GHC.Types.Float
  {- Unfolding: (GHC.List.$w!!
                   @ (Linear.V3.V3 GHC.Types.Float)
                   Lib.testSceneVerts
                   3#) -}
da6821c765d33656d13dc4dfe5f2df63
  v5 :: Linear.V3.V3 GHC.Types.Float
  {- Unfolding: (GHC.List.$w!!
                   @ (Linear.V3.V3 GHC.Types.Float)
                   Lib.testSceneVerts
                   4#) -}
df7d123ce3ff131e06ae287ccb22a21e
  v6 :: Linear.V3.V3 GHC.Types.Float
  {- Unfolding: (GHC.List.$w!!
                   @ (Linear.V3.V3 GHC.Types.Float)
                   Lib.testSceneVerts
                   5#) -}
41c39c356623911e7158be9c3b7ddc62
  vertex :: Lib.Ray -> Linear.V3.V3 GHC.Types.Float
  RecSel Left Lib.Ray
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U(U,U,U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds1 :: Lib.Ray) ->
                 case ds1 of wild { Lib.Ray ds2 ds3 ds4 -> ds2 }) -}
instance GHC.Base.Functor [Lib.RGB] = Lib.$fFunctorRGB
instance GHC.Show.Show [Lib.Light] = Lib.$fShowLight
instance GHC.Show.Show [Lib.RGB] = Lib.$fShowRGB
instance GHC.Show.Show [Lib.Ray] = Lib.$fShowRay
instance GHC.Show.Show [Lib.Triangle] = Lib.$fShowTriangle
"SPEC/Lib length @ Vector @ Float" [ALWAYS] forall ($dVector :: Data.Vector.Generic.Base.Vector
                                                                  Data.Vector.Vector
                                                                  GHC.Types.Float)
  Data.Vector.Generic.length @ Data.Vector.Vector
                             @ GHC.Types.Float
                             $dVector
  = Lib.$s!_$slength
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

